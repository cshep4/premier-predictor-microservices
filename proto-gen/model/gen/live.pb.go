// Code generated by protoc-gen-go. DO NOT EDIT.
// source: live.proto

package model

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type UpcomingMatchesResponse struct {
	Matches              map[string]*MatchFacts `protobuf:"bytes,1,rep,name=matches,proto3" json:"matches,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *UpcomingMatchesResponse) Reset()         { *m = UpcomingMatchesResponse{} }
func (m *UpcomingMatchesResponse) String() string { return proto.CompactTextString(m) }
func (*UpcomingMatchesResponse) ProtoMessage()    {}
func (*UpcomingMatchesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c9b1f08afb3d995e, []int{0}
}

func (m *UpcomingMatchesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpcomingMatchesResponse.Unmarshal(m, b)
}
func (m *UpcomingMatchesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpcomingMatchesResponse.Marshal(b, m, deterministic)
}
func (m *UpcomingMatchesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpcomingMatchesResponse.Merge(m, src)
}
func (m *UpcomingMatchesResponse) XXX_Size() int {
	return xxx_messageInfo_UpcomingMatchesResponse.Size(m)
}
func (m *UpcomingMatchesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpcomingMatchesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpcomingMatchesResponse proto.InternalMessageInfo

func (m *UpcomingMatchesResponse) GetMatches() map[string]*MatchFacts {
	if m != nil {
		return m.Matches
	}
	return nil
}

type MatchSummary struct {
	Match                *MatchFacts             `protobuf:"bytes,1,opt,name=match,proto3" json:"match,omitempty"`
	PredictionSummary    *MatchPredictionSummary `protobuf:"bytes,2,opt,name=predictionSummary,proto3" json:"predictionSummary,omitempty"`
	Prediction           *Prediction             `protobuf:"bytes,3,opt,name=prediction,proto3" json:"prediction,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *MatchSummary) Reset()         { *m = MatchSummary{} }
func (m *MatchSummary) String() string { return proto.CompactTextString(m) }
func (*MatchSummary) ProtoMessage()    {}
func (*MatchSummary) Descriptor() ([]byte, []int) {
	return fileDescriptor_c9b1f08afb3d995e, []int{1}
}

func (m *MatchSummary) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MatchSummary.Unmarshal(m, b)
}
func (m *MatchSummary) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MatchSummary.Marshal(b, m, deterministic)
}
func (m *MatchSummary) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MatchSummary.Merge(m, src)
}
func (m *MatchSummary) XXX_Size() int {
	return xxx_messageInfo_MatchSummary.Size(m)
}
func (m *MatchSummary) XXX_DiscardUnknown() {
	xxx_messageInfo_MatchSummary.DiscardUnknown(m)
}

var xxx_messageInfo_MatchSummary proto.InternalMessageInfo

func (m *MatchSummary) GetMatch() *MatchFacts {
	if m != nil {
		return m.Match
	}
	return nil
}

func (m *MatchSummary) GetPredictionSummary() *MatchPredictionSummary {
	if m != nil {
		return m.PredictionSummary
	}
	return nil
}

func (m *MatchSummary) GetPrediction() *Prediction {
	if m != nil {
		return m.Prediction
	}
	return nil
}

type MatchFacts struct {
	Id                   string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CompId               string               `protobuf:"bytes,2,opt,name=compId,proto3" json:"compId,omitempty"`
	FormattedDate        string               `protobuf:"bytes,3,opt,name=formattedDate,proto3" json:"formattedDate,omitempty"`
	Season               string               `protobuf:"bytes,4,opt,name=season,proto3" json:"season,omitempty"`
	Week                 string               `protobuf:"bytes,5,opt,name=week,proto3" json:"week,omitempty"`
	Venue                string               `protobuf:"bytes,6,opt,name=venue,proto3" json:"venue,omitempty"`
	VenueId              string               `protobuf:"bytes,7,opt,name=venueId,proto3" json:"venueId,omitempty"`
	VenueCity            string               `protobuf:"bytes,8,opt,name=venueCity,proto3" json:"venueCity,omitempty"`
	Status               string               `protobuf:"bytes,9,opt,name=status,proto3" json:"status,omitempty"`
	Timer                string               `protobuf:"bytes,10,opt,name=timer,proto3" json:"timer,omitempty"`
	Time                 string               `protobuf:"bytes,11,opt,name=time,proto3" json:"time,omitempty"`
	LocalTeamId          string               `protobuf:"bytes,12,opt,name=localTeamId,proto3" json:"localTeamId,omitempty"`
	LocalTeamName        string               `protobuf:"bytes,13,opt,name=localTeamName,proto3" json:"localTeamName,omitempty"`
	LocalTeamScore       string               `protobuf:"bytes,14,opt,name=localTeamScore,proto3" json:"localTeamScore,omitempty"`
	VisitorTeamId        string               `protobuf:"bytes,15,opt,name=visitorTeamId,proto3" json:"visitorTeamId,omitempty"`
	VisitorTeamName      string               `protobuf:"bytes,16,opt,name=visitorTeamName,proto3" json:"visitorTeamName,omitempty"`
	VisitorTeamScore     string               `protobuf:"bytes,17,opt,name=visitorTeamScore,proto3" json:"visitorTeamScore,omitempty"`
	HtScore              string               `protobuf:"bytes,18,opt,name=htScore,proto3" json:"htScore,omitempty"`
	FtScore              string               `protobuf:"bytes,19,opt,name=ftScore,proto3" json:"ftScore,omitempty"`
	EtScore              string               `protobuf:"bytes,20,opt,name=etScore,proto3" json:"etScore,omitempty"`
	PenaltyLocal         string               `protobuf:"bytes,21,opt,name=penaltyLocal,proto3" json:"penaltyLocal,omitempty"`
	PenaltyVisitor       string               `protobuf:"bytes,22,opt,name=penaltyVisitor,proto3" json:"penaltyVisitor,omitempty"`
	Events               []*Event             `protobuf:"bytes,23,rep,name=events,proto3" json:"events,omitempty"`
	Commentary           *Commentary          `protobuf:"bytes,24,opt,name=commentary,proto3" json:"commentary,omitempty"`
	MatchDate            *timestamp.Timestamp `protobuf:"bytes,25,opt,name=matchDate,proto3" json:"matchDate,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *MatchFacts) Reset()         { *m = MatchFacts{} }
func (m *MatchFacts) String() string { return proto.CompactTextString(m) }
func (*MatchFacts) ProtoMessage()    {}
func (*MatchFacts) Descriptor() ([]byte, []int) {
	return fileDescriptor_c9b1f08afb3d995e, []int{2}
}

func (m *MatchFacts) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MatchFacts.Unmarshal(m, b)
}
func (m *MatchFacts) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MatchFacts.Marshal(b, m, deterministic)
}
func (m *MatchFacts) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MatchFacts.Merge(m, src)
}
func (m *MatchFacts) XXX_Size() int {
	return xxx_messageInfo_MatchFacts.Size(m)
}
func (m *MatchFacts) XXX_DiscardUnknown() {
	xxx_messageInfo_MatchFacts.DiscardUnknown(m)
}

var xxx_messageInfo_MatchFacts proto.InternalMessageInfo

func (m *MatchFacts) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *MatchFacts) GetCompId() string {
	if m != nil {
		return m.CompId
	}
	return ""
}

func (m *MatchFacts) GetFormattedDate() string {
	if m != nil {
		return m.FormattedDate
	}
	return ""
}

func (m *MatchFacts) GetSeason() string {
	if m != nil {
		return m.Season
	}
	return ""
}

func (m *MatchFacts) GetWeek() string {
	if m != nil {
		return m.Week
	}
	return ""
}

func (m *MatchFacts) GetVenue() string {
	if m != nil {
		return m.Venue
	}
	return ""
}

func (m *MatchFacts) GetVenueId() string {
	if m != nil {
		return m.VenueId
	}
	return ""
}

func (m *MatchFacts) GetVenueCity() string {
	if m != nil {
		return m.VenueCity
	}
	return ""
}

func (m *MatchFacts) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *MatchFacts) GetTimer() string {
	if m != nil {
		return m.Timer
	}
	return ""
}

func (m *MatchFacts) GetTime() string {
	if m != nil {
		return m.Time
	}
	return ""
}

func (m *MatchFacts) GetLocalTeamId() string {
	if m != nil {
		return m.LocalTeamId
	}
	return ""
}

func (m *MatchFacts) GetLocalTeamName() string {
	if m != nil {
		return m.LocalTeamName
	}
	return ""
}

func (m *MatchFacts) GetLocalTeamScore() string {
	if m != nil {
		return m.LocalTeamScore
	}
	return ""
}

func (m *MatchFacts) GetVisitorTeamId() string {
	if m != nil {
		return m.VisitorTeamId
	}
	return ""
}

func (m *MatchFacts) GetVisitorTeamName() string {
	if m != nil {
		return m.VisitorTeamName
	}
	return ""
}

func (m *MatchFacts) GetVisitorTeamScore() string {
	if m != nil {
		return m.VisitorTeamScore
	}
	return ""
}

func (m *MatchFacts) GetHtScore() string {
	if m != nil {
		return m.HtScore
	}
	return ""
}

func (m *MatchFacts) GetFtScore() string {
	if m != nil {
		return m.FtScore
	}
	return ""
}

func (m *MatchFacts) GetEtScore() string {
	if m != nil {
		return m.EtScore
	}
	return ""
}

func (m *MatchFacts) GetPenaltyLocal() string {
	if m != nil {
		return m.PenaltyLocal
	}
	return ""
}

func (m *MatchFacts) GetPenaltyVisitor() string {
	if m != nil {
		return m.PenaltyVisitor
	}
	return ""
}

func (m *MatchFacts) GetEvents() []*Event {
	if m != nil {
		return m.Events
	}
	return nil
}

func (m *MatchFacts) GetCommentary() *Commentary {
	if m != nil {
		return m.Commentary
	}
	return nil
}

func (m *MatchFacts) GetMatchDate() *timestamp.Timestamp {
	if m != nil {
		return m.MatchDate
	}
	return nil
}

type Event struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Type                 string   `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Result               string   `protobuf:"bytes,3,opt,name=result,proto3" json:"result,omitempty"`
	Minute               string   `protobuf:"bytes,4,opt,name=minute,proto3" json:"minute,omitempty"`
	ExtraMin             string   `protobuf:"bytes,5,opt,name=extraMin,proto3" json:"extraMin,omitempty"`
	Team                 string   `protobuf:"bytes,6,opt,name=team,proto3" json:"team,omitempty"`
	Player               string   `protobuf:"bytes,7,opt,name=player,proto3" json:"player,omitempty"`
	PlayerId             string   `protobuf:"bytes,8,opt,name=playerId,proto3" json:"playerId,omitempty"`
	Assist               string   `protobuf:"bytes,9,opt,name=assist,proto3" json:"assist,omitempty"`
	AssistId             string   `protobuf:"bytes,10,opt,name=assistId,proto3" json:"assistId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Event) Reset()         { *m = Event{} }
func (m *Event) String() string { return proto.CompactTextString(m) }
func (*Event) ProtoMessage()    {}
func (*Event) Descriptor() ([]byte, []int) {
	return fileDescriptor_c9b1f08afb3d995e, []int{3}
}

func (m *Event) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Event.Unmarshal(m, b)
}
func (m *Event) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Event.Marshal(b, m, deterministic)
}
func (m *Event) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Event.Merge(m, src)
}
func (m *Event) XXX_Size() int {
	return xxx_messageInfo_Event.Size(m)
}
func (m *Event) XXX_DiscardUnknown() {
	xxx_messageInfo_Event.DiscardUnknown(m)
}

var xxx_messageInfo_Event proto.InternalMessageInfo

func (m *Event) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Event) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Event) GetResult() string {
	if m != nil {
		return m.Result
	}
	return ""
}

func (m *Event) GetMinute() string {
	if m != nil {
		return m.Minute
	}
	return ""
}

func (m *Event) GetExtraMin() string {
	if m != nil {
		return m.ExtraMin
	}
	return ""
}

func (m *Event) GetTeam() string {
	if m != nil {
		return m.Team
	}
	return ""
}

func (m *Event) GetPlayer() string {
	if m != nil {
		return m.Player
	}
	return ""
}

func (m *Event) GetPlayerId() string {
	if m != nil {
		return m.PlayerId
	}
	return ""
}

func (m *Event) GetAssist() string {
	if m != nil {
		return m.Assist
	}
	return ""
}

func (m *Event) GetAssistId() string {
	if m != nil {
		return m.AssistId
	}
	return ""
}

type Commentary struct {
	MatchId              string         `protobuf:"bytes,1,opt,name=matchId,proto3" json:"matchId,omitempty"`
	MatchInfo            []*MatchInfo   `protobuf:"bytes,2,rep,name=matchInfo,proto3" json:"matchInfo,omitempty"`
	Lineup               *Lineup        `protobuf:"bytes,3,opt,name=lineup,proto3" json:"lineup,omitempty"`
	Subs                 *Lineup        `protobuf:"bytes,4,opt,name=subs,proto3" json:"subs,omitempty"`
	Substitutions        *Substitutions `protobuf:"bytes,5,opt,name=substitutions,proto3" json:"substitutions,omitempty"`
	Comments             []*Comment     `protobuf:"bytes,6,rep,name=comments,proto3" json:"comments,omitempty"`
	MatchStats           *MatchStats    `protobuf:"bytes,7,opt,name=matchStats,proto3" json:"matchStats,omitempty"`
	PlayerStats          *PlayerStats   `protobuf:"bytes,8,opt,name=playerStats,proto3" json:"playerStats,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Commentary) Reset()         { *m = Commentary{} }
func (m *Commentary) String() string { return proto.CompactTextString(m) }
func (*Commentary) ProtoMessage()    {}
func (*Commentary) Descriptor() ([]byte, []int) {
	return fileDescriptor_c9b1f08afb3d995e, []int{4}
}

func (m *Commentary) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Commentary.Unmarshal(m, b)
}
func (m *Commentary) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Commentary.Marshal(b, m, deterministic)
}
func (m *Commentary) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Commentary.Merge(m, src)
}
func (m *Commentary) XXX_Size() int {
	return xxx_messageInfo_Commentary.Size(m)
}
func (m *Commentary) XXX_DiscardUnknown() {
	xxx_messageInfo_Commentary.DiscardUnknown(m)
}

var xxx_messageInfo_Commentary proto.InternalMessageInfo

func (m *Commentary) GetMatchId() string {
	if m != nil {
		return m.MatchId
	}
	return ""
}

func (m *Commentary) GetMatchInfo() []*MatchInfo {
	if m != nil {
		return m.MatchInfo
	}
	return nil
}

func (m *Commentary) GetLineup() *Lineup {
	if m != nil {
		return m.Lineup
	}
	return nil
}

func (m *Commentary) GetSubs() *Lineup {
	if m != nil {
		return m.Subs
	}
	return nil
}

func (m *Commentary) GetSubstitutions() *Substitutions {
	if m != nil {
		return m.Substitutions
	}
	return nil
}

func (m *Commentary) GetComments() []*Comment {
	if m != nil {
		return m.Comments
	}
	return nil
}

func (m *Commentary) GetMatchStats() *MatchStats {
	if m != nil {
		return m.MatchStats
	}
	return nil
}

func (m *Commentary) GetPlayerStats() *PlayerStats {
	if m != nil {
		return m.PlayerStats
	}
	return nil
}

type MatchInfo struct {
	Stadium              string   `protobuf:"bytes,1,opt,name=stadium,proto3" json:"stadium,omitempty"`
	Attendance           string   `protobuf:"bytes,2,opt,name=attendance,proto3" json:"attendance,omitempty"`
	Referee              string   `protobuf:"bytes,3,opt,name=referee,proto3" json:"referee,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MatchInfo) Reset()         { *m = MatchInfo{} }
func (m *MatchInfo) String() string { return proto.CompactTextString(m) }
func (*MatchInfo) ProtoMessage()    {}
func (*MatchInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_c9b1f08afb3d995e, []int{5}
}

func (m *MatchInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MatchInfo.Unmarshal(m, b)
}
func (m *MatchInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MatchInfo.Marshal(b, m, deterministic)
}
func (m *MatchInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MatchInfo.Merge(m, src)
}
func (m *MatchInfo) XXX_Size() int {
	return xxx_messageInfo_MatchInfo.Size(m)
}
func (m *MatchInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MatchInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MatchInfo proto.InternalMessageInfo

func (m *MatchInfo) GetStadium() string {
	if m != nil {
		return m.Stadium
	}
	return ""
}

func (m *MatchInfo) GetAttendance() string {
	if m != nil {
		return m.Attendance
	}
	return ""
}

func (m *MatchInfo) GetReferee() string {
	if m != nil {
		return m.Referee
	}
	return ""
}

type Lineup struct {
	LocalTeam            []*Position `protobuf:"bytes,1,rep,name=localTeam,proto3" json:"localTeam,omitempty"`
	VisitorTeam          []*Position `protobuf:"bytes,3,rep,name=visitorTeam,proto3" json:"visitorTeam,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Lineup) Reset()         { *m = Lineup{} }
func (m *Lineup) String() string { return proto.CompactTextString(m) }
func (*Lineup) ProtoMessage()    {}
func (*Lineup) Descriptor() ([]byte, []int) {
	return fileDescriptor_c9b1f08afb3d995e, []int{6}
}

func (m *Lineup) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Lineup.Unmarshal(m, b)
}
func (m *Lineup) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Lineup.Marshal(b, m, deterministic)
}
func (m *Lineup) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Lineup.Merge(m, src)
}
func (m *Lineup) XXX_Size() int {
	return xxx_messageInfo_Lineup.Size(m)
}
func (m *Lineup) XXX_DiscardUnknown() {
	xxx_messageInfo_Lineup.DiscardUnknown(m)
}

var xxx_messageInfo_Lineup proto.InternalMessageInfo

func (m *Lineup) GetLocalTeam() []*Position {
	if m != nil {
		return m.LocalTeam
	}
	return nil
}

func (m *Lineup) GetVisitorTeam() []*Position {
	if m != nil {
		return m.VisitorTeam
	}
	return nil
}

type Position struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Number               string   `protobuf:"bytes,2,opt,name=number,proto3" json:"number,omitempty"`
	Name                 string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Pos                  string   `protobuf:"bytes,4,opt,name=pos,proto3" json:"pos,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Position) Reset()         { *m = Position{} }
func (m *Position) String() string { return proto.CompactTextString(m) }
func (*Position) ProtoMessage()    {}
func (*Position) Descriptor() ([]byte, []int) {
	return fileDescriptor_c9b1f08afb3d995e, []int{7}
}

func (m *Position) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Position.Unmarshal(m, b)
}
func (m *Position) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Position.Marshal(b, m, deterministic)
}
func (m *Position) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Position.Merge(m, src)
}
func (m *Position) XXX_Size() int {
	return xxx_messageInfo_Position.Size(m)
}
func (m *Position) XXX_DiscardUnknown() {
	xxx_messageInfo_Position.DiscardUnknown(m)
}

var xxx_messageInfo_Position proto.InternalMessageInfo

func (m *Position) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Position) GetNumber() string {
	if m != nil {
		return m.Number
	}
	return ""
}

func (m *Position) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Position) GetPos() string {
	if m != nil {
		return m.Pos
	}
	return ""
}

type Substitutions struct {
	LocalTeam            []*Substitution `protobuf:"bytes,1,rep,name=localTeam,proto3" json:"localTeam,omitempty"`
	VisitorTeam          []*Substitution `protobuf:"bytes,2,rep,name=visitorTeam,proto3" json:"visitorTeam,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Substitutions) Reset()         { *m = Substitutions{} }
func (m *Substitutions) String() string { return proto.CompactTextString(m) }
func (*Substitutions) ProtoMessage()    {}
func (*Substitutions) Descriptor() ([]byte, []int) {
	return fileDescriptor_c9b1f08afb3d995e, []int{8}
}

func (m *Substitutions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Substitutions.Unmarshal(m, b)
}
func (m *Substitutions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Substitutions.Marshal(b, m, deterministic)
}
func (m *Substitutions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Substitutions.Merge(m, src)
}
func (m *Substitutions) XXX_Size() int {
	return xxx_messageInfo_Substitutions.Size(m)
}
func (m *Substitutions) XXX_DiscardUnknown() {
	xxx_messageInfo_Substitutions.DiscardUnknown(m)
}

var xxx_messageInfo_Substitutions proto.InternalMessageInfo

func (m *Substitutions) GetLocalTeam() []*Substitution {
	if m != nil {
		return m.LocalTeam
	}
	return nil
}

func (m *Substitutions) GetVisitorTeam() []*Substitution {
	if m != nil {
		return m.VisitorTeam
	}
	return nil
}

type Substitution struct {
	OffName              string   `protobuf:"bytes,1,opt,name=offName,proto3" json:"offName,omitempty"`
	OnName               string   `protobuf:"bytes,2,opt,name=onName,proto3" json:"onName,omitempty"`
	OffId                string   `protobuf:"bytes,3,opt,name=offId,proto3" json:"offId,omitempty"`
	OnId                 string   `protobuf:"bytes,4,opt,name=onId,proto3" json:"onId,omitempty"`
	Minute               string   `protobuf:"bytes,5,opt,name=minute,proto3" json:"minute,omitempty"`
	TableId              string   `protobuf:"bytes,6,opt,name=tableId,proto3" json:"tableId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Substitution) Reset()         { *m = Substitution{} }
func (m *Substitution) String() string { return proto.CompactTextString(m) }
func (*Substitution) ProtoMessage()    {}
func (*Substitution) Descriptor() ([]byte, []int) {
	return fileDescriptor_c9b1f08afb3d995e, []int{9}
}

func (m *Substitution) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Substitution.Unmarshal(m, b)
}
func (m *Substitution) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Substitution.Marshal(b, m, deterministic)
}
func (m *Substitution) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Substitution.Merge(m, src)
}
func (m *Substitution) XXX_Size() int {
	return xxx_messageInfo_Substitution.Size(m)
}
func (m *Substitution) XXX_DiscardUnknown() {
	xxx_messageInfo_Substitution.DiscardUnknown(m)
}

var xxx_messageInfo_Substitution proto.InternalMessageInfo

func (m *Substitution) GetOffName() string {
	if m != nil {
		return m.OffName
	}
	return ""
}

func (m *Substitution) GetOnName() string {
	if m != nil {
		return m.OnName
	}
	return ""
}

func (m *Substitution) GetOffId() string {
	if m != nil {
		return m.OffId
	}
	return ""
}

func (m *Substitution) GetOnId() string {
	if m != nil {
		return m.OnId
	}
	return ""
}

func (m *Substitution) GetMinute() string {
	if m != nil {
		return m.Minute
	}
	return ""
}

func (m *Substitution) GetTableId() string {
	if m != nil {
		return m.TableId
	}
	return ""
}

type Comment struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Important            string   `protobuf:"bytes,2,opt,name=important,proto3" json:"important,omitempty"`
	Goal                 string   `protobuf:"bytes,3,opt,name=goal,proto3" json:"goal,omitempty"`
	Minute               string   `protobuf:"bytes,4,opt,name=minute,proto3" json:"minute,omitempty"`
	Comment              string   `protobuf:"bytes,5,opt,name=comment,proto3" json:"comment,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Comment) Reset()         { *m = Comment{} }
func (m *Comment) String() string { return proto.CompactTextString(m) }
func (*Comment) ProtoMessage()    {}
func (*Comment) Descriptor() ([]byte, []int) {
	return fileDescriptor_c9b1f08afb3d995e, []int{10}
}

func (m *Comment) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Comment.Unmarshal(m, b)
}
func (m *Comment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Comment.Marshal(b, m, deterministic)
}
func (m *Comment) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Comment.Merge(m, src)
}
func (m *Comment) XXX_Size() int {
	return xxx_messageInfo_Comment.Size(m)
}
func (m *Comment) XXX_DiscardUnknown() {
	xxx_messageInfo_Comment.DiscardUnknown(m)
}

var xxx_messageInfo_Comment proto.InternalMessageInfo

func (m *Comment) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Comment) GetImportant() string {
	if m != nil {
		return m.Important
	}
	return ""
}

func (m *Comment) GetGoal() string {
	if m != nil {
		return m.Goal
	}
	return ""
}

func (m *Comment) GetMinute() string {
	if m != nil {
		return m.Minute
	}
	return ""
}

func (m *Comment) GetComment() string {
	if m != nil {
		return m.Comment
	}
	return ""
}

type MatchStats struct {
	LocalTeam            []*TeamStats `protobuf:"bytes,1,rep,name=localTeam,proto3" json:"localTeam,omitempty"`
	VisitorTeam          []*TeamStats `protobuf:"bytes,2,rep,name=visitorTeam,proto3" json:"visitorTeam,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *MatchStats) Reset()         { *m = MatchStats{} }
func (m *MatchStats) String() string { return proto.CompactTextString(m) }
func (*MatchStats) ProtoMessage()    {}
func (*MatchStats) Descriptor() ([]byte, []int) {
	return fileDescriptor_c9b1f08afb3d995e, []int{11}
}

func (m *MatchStats) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MatchStats.Unmarshal(m, b)
}
func (m *MatchStats) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MatchStats.Marshal(b, m, deterministic)
}
func (m *MatchStats) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MatchStats.Merge(m, src)
}
func (m *MatchStats) XXX_Size() int {
	return xxx_messageInfo_MatchStats.Size(m)
}
func (m *MatchStats) XXX_DiscardUnknown() {
	xxx_messageInfo_MatchStats.DiscardUnknown(m)
}

var xxx_messageInfo_MatchStats proto.InternalMessageInfo

func (m *MatchStats) GetLocalTeam() []*TeamStats {
	if m != nil {
		return m.LocalTeam
	}
	return nil
}

func (m *MatchStats) GetVisitorTeam() []*TeamStats {
	if m != nil {
		return m.VisitorTeam
	}
	return nil
}

type TeamStats struct {
	ShotsTotal           string   `protobuf:"bytes,1,opt,name=shotsTotal,proto3" json:"shotsTotal,omitempty"`
	ShotsOnGoal          string   `protobuf:"bytes,2,opt,name=shotsOnGoal,proto3" json:"shotsOnGoal,omitempty"`
	Fouls                string   `protobuf:"bytes,3,opt,name=fouls,proto3" json:"fouls,omitempty"`
	Corners              string   `protobuf:"bytes,4,opt,name=corners,proto3" json:"corners,omitempty"`
	Offsides             string   `protobuf:"bytes,5,opt,name=offsides,proto3" json:"offsides,omitempty"`
	PossessionTime       string   `protobuf:"bytes,6,opt,name=possessionTime,proto3" json:"possessionTime,omitempty"`
	YellowCards          string   `protobuf:"bytes,7,opt,name=yellowCards,proto3" json:"yellowCards,omitempty"`
	RedCards             string   `protobuf:"bytes,8,opt,name=redCards,proto3" json:"redCards,omitempty"`
	Saves                string   `protobuf:"bytes,9,opt,name=saves,proto3" json:"saves,omitempty"`
	TableId              string   `protobuf:"bytes,10,opt,name=tableId,proto3" json:"tableId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TeamStats) Reset()         { *m = TeamStats{} }
func (m *TeamStats) String() string { return proto.CompactTextString(m) }
func (*TeamStats) ProtoMessage()    {}
func (*TeamStats) Descriptor() ([]byte, []int) {
	return fileDescriptor_c9b1f08afb3d995e, []int{12}
}

func (m *TeamStats) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TeamStats.Unmarshal(m, b)
}
func (m *TeamStats) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TeamStats.Marshal(b, m, deterministic)
}
func (m *TeamStats) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TeamStats.Merge(m, src)
}
func (m *TeamStats) XXX_Size() int {
	return xxx_messageInfo_TeamStats.Size(m)
}
func (m *TeamStats) XXX_DiscardUnknown() {
	xxx_messageInfo_TeamStats.DiscardUnknown(m)
}

var xxx_messageInfo_TeamStats proto.InternalMessageInfo

func (m *TeamStats) GetShotsTotal() string {
	if m != nil {
		return m.ShotsTotal
	}
	return ""
}

func (m *TeamStats) GetShotsOnGoal() string {
	if m != nil {
		return m.ShotsOnGoal
	}
	return ""
}

func (m *TeamStats) GetFouls() string {
	if m != nil {
		return m.Fouls
	}
	return ""
}

func (m *TeamStats) GetCorners() string {
	if m != nil {
		return m.Corners
	}
	return ""
}

func (m *TeamStats) GetOffsides() string {
	if m != nil {
		return m.Offsides
	}
	return ""
}

func (m *TeamStats) GetPossessionTime() string {
	if m != nil {
		return m.PossessionTime
	}
	return ""
}

func (m *TeamStats) GetYellowCards() string {
	if m != nil {
		return m.YellowCards
	}
	return ""
}

func (m *TeamStats) GetRedCards() string {
	if m != nil {
		return m.RedCards
	}
	return ""
}

func (m *TeamStats) GetSaves() string {
	if m != nil {
		return m.Saves
	}
	return ""
}

func (m *TeamStats) GetTableId() string {
	if m != nil {
		return m.TableId
	}
	return ""
}

type PlayerStats struct {
	LocalTeam            *Players `protobuf:"bytes,1,opt,name=localTeam,proto3" json:"localTeam,omitempty"`
	VisitorTeam          *Players `protobuf:"bytes,2,opt,name=visitorTeam,proto3" json:"visitorTeam,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PlayerStats) Reset()         { *m = PlayerStats{} }
func (m *PlayerStats) String() string { return proto.CompactTextString(m) }
func (*PlayerStats) ProtoMessage()    {}
func (*PlayerStats) Descriptor() ([]byte, []int) {
	return fileDescriptor_c9b1f08afb3d995e, []int{13}
}

func (m *PlayerStats) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlayerStats.Unmarshal(m, b)
}
func (m *PlayerStats) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlayerStats.Marshal(b, m, deterministic)
}
func (m *PlayerStats) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlayerStats.Merge(m, src)
}
func (m *PlayerStats) XXX_Size() int {
	return xxx_messageInfo_PlayerStats.Size(m)
}
func (m *PlayerStats) XXX_DiscardUnknown() {
	xxx_messageInfo_PlayerStats.DiscardUnknown(m)
}

var xxx_messageInfo_PlayerStats proto.InternalMessageInfo

func (m *PlayerStats) GetLocalTeam() *Players {
	if m != nil {
		return m.LocalTeam
	}
	return nil
}

func (m *PlayerStats) GetVisitorTeam() *Players {
	if m != nil {
		return m.VisitorTeam
	}
	return nil
}

type Players struct {
	Player               []*Player `protobuf:"bytes,1,rep,name=player,proto3" json:"player,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Players) Reset()         { *m = Players{} }
func (m *Players) String() string { return proto.CompactTextString(m) }
func (*Players) ProtoMessage()    {}
func (*Players) Descriptor() ([]byte, []int) {
	return fileDescriptor_c9b1f08afb3d995e, []int{14}
}

func (m *Players) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Players.Unmarshal(m, b)
}
func (m *Players) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Players.Marshal(b, m, deterministic)
}
func (m *Players) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Players.Merge(m, src)
}
func (m *Players) XXX_Size() int {
	return xxx_messageInfo_Players.Size(m)
}
func (m *Players) XXX_DiscardUnknown() {
	xxx_messageInfo_Players.DiscardUnknown(m)
}

var xxx_messageInfo_Players proto.InternalMessageInfo

func (m *Players) GetPlayer() []*Player {
	if m != nil {
		return m.Player
	}
	return nil
}

type Player struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Num                  string   `protobuf:"bytes,2,opt,name=num,proto3" json:"num,omitempty"`
	Name                 string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Pos                  string   `protobuf:"bytes,4,opt,name=pos,proto3" json:"pos,omitempty"`
	PosX                 string   `protobuf:"bytes,5,opt,name=posX,proto3" json:"posX,omitempty"`
	PosY                 string   `protobuf:"bytes,6,opt,name=posY,proto3" json:"posY,omitempty"`
	ShotsTotal           string   `protobuf:"bytes,7,opt,name=shotsTotal,proto3" json:"shotsTotal,omitempty"`
	ShotsOnGoal          string   `protobuf:"bytes,8,opt,name=shotsOnGoal,proto3" json:"shotsOnGoal,omitempty"`
	Goals                string   `protobuf:"bytes,9,opt,name=goals,proto3" json:"goals,omitempty"`
	Assists              string   `protobuf:"bytes,10,opt,name=assists,proto3" json:"assists,omitempty"`
	Offsides             string   `protobuf:"bytes,11,opt,name=offsides,proto3" json:"offsides,omitempty"`
	FoulsDrawn           string   `protobuf:"bytes,12,opt,name=foulsDrawn,proto3" json:"foulsDrawn,omitempty"`
	FoulsCommitted       string   `protobuf:"bytes,13,opt,name=foulsCommitted,proto3" json:"foulsCommitted,omitempty"`
	Saves                string   `protobuf:"bytes,14,opt,name=saves,proto3" json:"saves,omitempty"`
	YellowCards          string   `protobuf:"bytes,15,opt,name=yellowCards,proto3" json:"yellowCards,omitempty"`
	RedCards             string   `protobuf:"bytes,16,opt,name=redCards,proto3" json:"redCards,omitempty"`
	PenScore             string   `protobuf:"bytes,17,opt,name=penScore,proto3" json:"penScore,omitempty"`
	PenMiss              string   `protobuf:"bytes,18,opt,name=penMiss,proto3" json:"penMiss,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Player) Reset()         { *m = Player{} }
func (m *Player) String() string { return proto.CompactTextString(m) }
func (*Player) ProtoMessage()    {}
func (*Player) Descriptor() ([]byte, []int) {
	return fileDescriptor_c9b1f08afb3d995e, []int{15}
}

func (m *Player) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Player.Unmarshal(m, b)
}
func (m *Player) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Player.Marshal(b, m, deterministic)
}
func (m *Player) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Player.Merge(m, src)
}
func (m *Player) XXX_Size() int {
	return xxx_messageInfo_Player.Size(m)
}
func (m *Player) XXX_DiscardUnknown() {
	xxx_messageInfo_Player.DiscardUnknown(m)
}

var xxx_messageInfo_Player proto.InternalMessageInfo

func (m *Player) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Player) GetNum() string {
	if m != nil {
		return m.Num
	}
	return ""
}

func (m *Player) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Player) GetPos() string {
	if m != nil {
		return m.Pos
	}
	return ""
}

func (m *Player) GetPosX() string {
	if m != nil {
		return m.PosX
	}
	return ""
}

func (m *Player) GetPosY() string {
	if m != nil {
		return m.PosY
	}
	return ""
}

func (m *Player) GetShotsTotal() string {
	if m != nil {
		return m.ShotsTotal
	}
	return ""
}

func (m *Player) GetShotsOnGoal() string {
	if m != nil {
		return m.ShotsOnGoal
	}
	return ""
}

func (m *Player) GetGoals() string {
	if m != nil {
		return m.Goals
	}
	return ""
}

func (m *Player) GetAssists() string {
	if m != nil {
		return m.Assists
	}
	return ""
}

func (m *Player) GetOffsides() string {
	if m != nil {
		return m.Offsides
	}
	return ""
}

func (m *Player) GetFoulsDrawn() string {
	if m != nil {
		return m.FoulsDrawn
	}
	return ""
}

func (m *Player) GetFoulsCommitted() string {
	if m != nil {
		return m.FoulsCommitted
	}
	return ""
}

func (m *Player) GetSaves() string {
	if m != nil {
		return m.Saves
	}
	return ""
}

func (m *Player) GetYellowCards() string {
	if m != nil {
		return m.YellowCards
	}
	return ""
}

func (m *Player) GetRedCards() string {
	if m != nil {
		return m.RedCards
	}
	return ""
}

func (m *Player) GetPenScore() string {
	if m != nil {
		return m.PenScore
	}
	return ""
}

func (m *Player) GetPenMiss() string {
	if m != nil {
		return m.PenMiss
	}
	return ""
}

func init() {
	proto.RegisterType((*UpcomingMatchesResponse)(nil), "model.UpcomingMatchesResponse")
	proto.RegisterMapType((map[string]*MatchFacts)(nil), "model.UpcomingMatchesResponse.MatchesEntry")
	proto.RegisterType((*MatchSummary)(nil), "model.MatchSummary")
	proto.RegisterType((*MatchFacts)(nil), "model.MatchFacts")
	proto.RegisterType((*Event)(nil), "model.Event")
	proto.RegisterType((*Commentary)(nil), "model.Commentary")
	proto.RegisterType((*MatchInfo)(nil), "model.MatchInfo")
	proto.RegisterType((*Lineup)(nil), "model.Lineup")
	proto.RegisterType((*Position)(nil), "model.Position")
	proto.RegisterType((*Substitutions)(nil), "model.Substitutions")
	proto.RegisterType((*Substitution)(nil), "model.Substitution")
	proto.RegisterType((*Comment)(nil), "model.Comment")
	proto.RegisterType((*MatchStats)(nil), "model.MatchStats")
	proto.RegisterType((*TeamStats)(nil), "model.TeamStats")
	proto.RegisterType((*PlayerStats)(nil), "model.PlayerStats")
	proto.RegisterType((*Players)(nil), "model.Players")
	proto.RegisterType((*Player)(nil), "model.Player")
}

func init() { proto.RegisterFile("live.proto", fileDescriptor_c9b1f08afb3d995e) }

var fileDescriptor_c9b1f08afb3d995e = []byte{
	// 1459 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x57, 0xdd, 0x92, 0x13, 0x45,
	0x14, 0x36, 0x59, 0x36, 0xd9, 0x9c, 0xec, 0x4f, 0x68, 0x10, 0xc6, 0x15, 0x71, 0x9d, 0x02, 0x5d,
	0x51, 0x03, 0xac, 0x58, 0x45, 0x51, 0x5e, 0x09, 0x2b, 0x95, 0x92, 0x55, 0x6a, 0x16, 0x2d, 0xbc,
	0xb2, 0x66, 0x33, 0x9d, 0xdd, 0x91, 0x99, 0xe9, 0x71, 0xba, 0x27, 0x98, 0x0b, 0xdf, 0xc4, 0x2b,
	0x5f, 0x80, 0x4b, 0x5f, 0xc5, 0xd7, 0xb0, 0x7c, 0x01, 0xeb, 0x9c, 0x3e, 0x9d, 0xf4, 0x24, 0x0b,
	0x7a, 0x95, 0xfe, 0xbe, 0x73, 0xce, 0x74, 0xf7, 0xf9, 0xed, 0x00, 0x64, 0xe9, 0x54, 0x0e, 0xcb,
	0x4a, 0x19, 0x25, 0xd6, 0x73, 0x95, 0xc8, 0x6c, 0xf7, 0xdd, 0x53, 0xa5, 0x4e, 0x33, 0x79, 0x9b,
	0xc8, 0x93, 0x7a, 0x72, 0x5b, 0xe6, 0xa5, 0x99, 0x59, 0x9d, 0xdd, 0xf7, 0x97, 0x85, 0x26, 0xcd,
	0xa5, 0x36, 0x71, 0x5e, 0xb2, 0xc2, 0x56, 0x25, 0x7f, 0xa9, 0xa5, 0x36, 0x0c, 0x07, 0x65, 0x25,
	0x93, 0x74, 0x6c, 0x52, 0x55, 0x58, 0x26, 0x7c, 0xd5, 0x82, 0xab, 0xdf, 0x97, 0x63, 0x95, 0xa7,
	0xc5, 0xe9, 0x51, 0x6c, 0xc6, 0x67, 0x52, 0x47, 0x52, 0x97, 0xaa, 0xd0, 0x52, 0x1c, 0x42, 0x37,
	0xb7, 0x54, 0xd0, 0xda, 0x5b, 0xdb, 0xef, 0x1f, 0x7c, 0x32, 0xa4, 0x33, 0x0d, 0x5f, 0x63, 0x30,
	0x64, 0x7c, 0x58, 0x98, 0x6a, 0x16, 0x39, 0xdb, 0xdd, 0x23, 0xd8, 0xf4, 0x05, 0x62, 0x00, 0x6b,
	0x2f, 0xe4, 0x2c, 0x68, 0xed, 0xb5, 0xf6, 0x7b, 0x11, 0x2e, 0xc5, 0x47, 0xb0, 0x3e, 0x8d, 0xb3,
	0x5a, 0x06, 0xed, 0xbd, 0xd6, 0x7e, 0xff, 0xe0, 0x22, 0x6f, 0x43, 0x56, 0x5f, 0xc7, 0x63, 0xa3,
	0x23, 0x2b, 0x7f, 0xd0, 0xbe, 0xdf, 0x0a, 0xff, 0x6c, 0xf1, 0xf7, 0x8e, 0xeb, 0x3c, 0x8f, 0x2b,
	0xb2, 0xa6, 0xad, 0xe8, 0x8b, 0xe7, 0x5b, 0x93, 0x5c, 0x7c, 0x03, 0x17, 0x17, 0xf7, 0x67, 0x6b,
	0xde, 0xf2, 0x3d, 0xdf, 0xe8, 0xe9, 0xb2, 0x52, 0xb4, 0x6a, 0x27, 0xee, 0x02, 0x2c, 0xc8, 0x60,
	0xad, 0xb1, 0xf5, 0xe2, 0x03, 0x91, 0xa7, 0x14, 0xbe, 0xea, 0x00, 0x2c, 0x4e, 0x25, 0xb6, 0xa1,
	0x9d, 0x26, 0xec, 0x86, 0x76, 0x9a, 0x88, 0x2b, 0xd0, 0x19, 0xab, 0xbc, 0x1c, 0x25, 0x74, 0xa6,
	0x5e, 0xc4, 0x48, 0xdc, 0x80, 0xad, 0x89, 0xaa, 0xf2, 0xd8, 0x18, 0x99, 0x3c, 0x8a, 0x8d, 0xa4,
	0xcd, 0x7a, 0x51, 0x93, 0x44, 0x6b, 0x2d, 0x63, 0xad, 0x8a, 0xe0, 0x82, 0xb5, 0xb6, 0x48, 0x08,
	0xb8, 0xf0, 0x52, 0xca, 0x17, 0xc1, 0x3a, 0xb1, 0xb4, 0x16, 0x97, 0x61, 0x7d, 0x2a, 0x8b, 0x5a,
	0x06, 0x1d, 0x22, 0x2d, 0x10, 0x01, 0x74, 0x69, 0x31, 0x4a, 0x82, 0x2e, 0xf1, 0x0e, 0x8a, 0x6b,
	0xd0, 0xa3, 0xe5, 0xc3, 0xd4, 0xcc, 0x82, 0x0d, 0x92, 0x2d, 0x08, 0xda, 0xd9, 0xc4, 0xa6, 0xd6,
	0x41, 0x8f, 0x77, 0x26, 0x84, 0xbb, 0x60, 0x3a, 0x56, 0x01, 0xd8, 0x5d, 0x08, 0xe0, 0x79, 0x70,
	0x11, 0xf4, 0xed, 0x79, 0x70, 0x2d, 0xf6, 0xa0, 0x9f, 0xa9, 0x71, 0x9c, 0x3d, 0x93, 0x71, 0x3e,
	0x4a, 0x82, 0x4d, 0x12, 0xf9, 0x14, 0xfa, 0x60, 0x0e, 0xbf, 0x8d, 0x73, 0x19, 0x6c, 0x59, 0x1f,
	0x34, 0x48, 0xf1, 0x21, 0x6c, 0xcf, 0x89, 0xe3, 0xb1, 0xaa, 0x64, 0xb0, 0x4d, 0x6a, 0x4b, 0x2c,
	0x7e, 0x6d, 0x9a, 0xea, 0xd4, 0xa8, 0x8a, 0x77, 0xdc, 0xb1, 0x5f, 0x6b, 0x90, 0x62, 0x1f, 0x76,
	0x3c, 0x82, 0x76, 0x1d, 0x90, 0xde, 0x32, 0x2d, 0x6e, 0xc1, 0xc0, 0xa3, 0xec, 0xce, 0x17, 0x49,
	0x75, 0x85, 0x47, 0x2f, 0x9f, 0x19, 0xab, 0x22, 0xac, 0x97, 0x19, 0xa2, 0x64, 0xc2, 0x92, 0x4b,
	0x56, 0x32, 0x59, 0x48, 0x24, 0x4b, 0x2e, 0x5b, 0x09, 0x43, 0x11, 0xc2, 0x66, 0x29, 0x8b, 0x38,
	0x33, 0xb3, 0x27, 0x78, 0xc5, 0xe0, 0x6d, 0x12, 0x37, 0x38, 0xf4, 0x0a, 0xe3, 0x1f, 0xec, 0x61,
	0x82, 0x2b, 0xd6, 0x2b, 0x4d, 0x56, 0xdc, 0x80, 0x8e, 0x9c, 0xca, 0xc2, 0xe8, 0xe0, 0x2a, 0x55,
	0xfb, 0x26, 0x67, 0xf3, 0x21, 0x92, 0x11, 0xcb, 0x30, 0xef, 0xc7, 0x2a, 0xcf, 0x65, 0x61, 0xb0,
	0x7a, 0x82, 0x46, 0xde, 0x3f, 0x9c, 0x0b, 0x22, 0x4f, 0x49, 0xdc, 0x87, 0x1e, 0x15, 0x20, 0x25,
	0xef, 0x3b, 0x64, 0xb1, 0x3b, 0xb4, 0x9d, 0x6b, 0xe8, 0x3a, 0xd7, 0xf0, 0x99, 0xeb, 0x5c, 0xd1,
	0x42, 0x39, 0xfc, 0xa7, 0x05, 0xeb, 0xb4, 0xfd, 0x4a, 0xb1, 0x60, 0x1a, 0xcd, 0x4a, 0xc9, 0xa5,
	0x42, 0x6b, 0x4c, 0xc4, 0x4a, 0xea, 0x3a, 0x33, 0x5c, 0x21, 0x8c, 0x90, 0xcf, 0xd3, 0xa2, 0x36,
	0xd2, 0x95, 0x86, 0x45, 0x62, 0x17, 0x36, 0xe4, 0xaf, 0xa6, 0x8a, 0x8f, 0xd2, 0x82, 0xcb, 0x63,
	0x8e, 0xe9, 0xfb, 0x32, 0xce, 0xb9, 0x42, 0x68, 0x8d, 0xdf, 0x29, 0xb3, 0x78, 0x26, 0x2b, 0xae,
	0x0f, 0x46, 0xf8, 0x1d, 0xbb, 0x1a, 0x25, 0x5c, 0x1d, 0x73, 0x8c, 0x36, 0xb1, 0xd6, 0xa9, 0x36,
	0xae, 0x38, 0x2c, 0x42, 0x1b, 0xbb, 0x1a, 0x25, 0x5c, 0x1f, 0x73, 0x1c, 0xfe, 0xdd, 0x06, 0x58,
	0xb8, 0x12, 0xa3, 0x4f, 0x1e, 0x19, 0xb9, 0xfb, 0x3b, 0x28, 0x86, 0xec, 0xd8, 0x51, 0x31, 0x51,
	0x41, 0x9b, 0x82, 0x36, 0xf0, 0x1b, 0x19, 0xf2, 0xd1, 0x42, 0x45, 0xdc, 0x84, 0x4e, 0x96, 0x16,
	0xb2, 0x2e, 0xb9, 0x5f, 0x6d, 0xb1, 0xf2, 0x13, 0x22, 0x23, 0x16, 0x8a, 0x0f, 0xe0, 0x82, 0xae,
	0x4f, 0x34, 0x79, 0x6b, 0x45, 0x89, 0x44, 0xe2, 0x01, 0x6c, 0xe1, 0xaf, 0x49, 0x4d, 0x8d, 0xad,
	0x4d, 0x93, 0xff, 0xfa, 0x07, 0x97, 0x59, 0xf7, 0xd8, 0x97, 0x45, 0x4d, 0x55, 0x71, 0x0b, 0x36,
	0x38, 0x39, 0x74, 0xd0, 0xa1, 0x43, 0x6f, 0x37, 0xf3, 0x27, 0x9a, 0xcb, 0x31, 0xdb, 0xe8, 0xf8,
	0xc7, 0x26, 0x36, 0x9a, 0xdc, 0xbe, 0xd4, 0xe0, 0x49, 0x10, 0x79, 0x4a, 0xe2, 0x1e, 0xf4, 0xad,
	0xf7, 0xad, 0xcd, 0x06, 0xd9, 0x08, 0xd7, 0x99, 0x17, 0x92, 0xc8, 0x57, 0x0b, 0x7f, 0x82, 0xde,
	0xdc, 0x65, 0xe8, 0x71, 0x6d, 0xe2, 0x24, 0xad, 0x73, 0xe7, 0x71, 0x86, 0xe2, 0x3a, 0x00, 0xb6,
	0xdc, 0x22, 0x89, 0x8b, 0xb1, 0x4b, 0x3e, 0x8f, 0x41, 0xcb, 0x4a, 0x4e, 0x64, 0x25, 0x5d, 0x97,
	0x76, 0x30, 0xfc, 0x19, 0x3a, 0xd6, 0x83, 0xe2, 0x33, 0xe8, 0xcd, 0xfb, 0x11, 0x0f, 0xd6, 0x1d,
	0x77, 0x3c, 0xa5, 0x53, 0x1a, 0x1b, 0x0b, 0x0d, 0x71, 0x17, 0xfa, 0x5e, 0x13, 0x09, 0xd6, 0xce,
	0x37, 0xf0, 0x75, 0xc2, 0xe7, 0xb0, 0xe1, 0x04, 0xe7, 0x4d, 0x99, 0xa2, 0xce, 0x4f, 0x64, 0xe5,
	0xa6, 0x8c, 0x45, 0x98, 0xf0, 0x05, 0xb6, 0x38, 0x7b, 0x6c, 0x5a, 0xe3, 0xa4, 0x2e, 0x95, 0xe6,
	0xaa, 0xc1, 0x65, 0x38, 0x83, 0xad, 0x46, 0x6c, 0xc5, 0xdd, 0xd5, 0xcb, 0x5c, 0x3a, 0x27, 0x09,
	0xfc, 0x0b, 0x7d, 0xd1, 0xbc, 0x50, 0xfb, 0xf5, 0x46, 0x8d, 0x4b, 0xfd, 0xde, 0x82, 0x4d, 0x5f,
	0x8a, 0xbe, 0x56, 0x93, 0x09, 0xf5, 0x65, 0x8e, 0x12, 0x43, 0xbc, 0xa3, 0x2a, 0x48, 0xc0, 0x77,
	0xb4, 0x08, 0x27, 0x92, 0x9a, 0x4c, 0x46, 0x09, 0x5f, 0xd2, 0x02, 0xbc, 0xb9, 0x2a, 0x46, 0x09,
	0x5f, 0x93, 0xd6, 0x5e, 0xcb, 0x58, 0x6f, 0xb4, 0x8c, 0x00, 0xba, 0x26, 0x3e, 0xc9, 0x70, 0x46,
	0xda, 0xce, 0xe0, 0x60, 0xf8, 0x1b, 0x74, 0x39, 0x7d, 0x57, 0x5c, 0x7e, 0x0d, 0x7a, 0x69, 0x5e,
	0xaa, 0xca, 0xc4, 0x85, 0xe1, 0x13, 0x2d, 0x08, 0xdc, 0xfe, 0x54, 0xc5, 0x99, 0x73, 0x3c, 0xae,
	0x5f, 0xdb, 0xb1, 0x02, 0xe8, 0x72, 0x69, 0xf0, 0xb9, 0x1c, 0x0c, 0x4b, 0x7e, 0x5a, 0xd8, 0x1a,
	0x18, 0xae, 0x46, 0xc5, 0x35, 0x06, 0x9a, 0x44, 0x94, 0xff, 0x5e, 0x48, 0x0e, 0xce, 0x0b, 0xc9,
	0xaa, 0x45, 0x23, 0x1e, 0xaf, 0xda, 0xd0, 0x9b, 0x8b, 0xb0, 0x30, 0xf4, 0x99, 0x32, 0xfa, 0x99,
	0x32, 0x71, 0xc6, 0x77, 0xf7, 0x18, 0x1c, 0xf1, 0x84, 0xbe, 0x2b, 0x1e, 0xe3, 0x65, 0xad, 0x17,
	0x7c, 0x0a, 0x83, 0x33, 0x51, 0x75, 0xa6, 0x5d, 0x70, 0x08, 0xd8, 0x1b, 0x57, 0x85, 0xac, 0x5c,
	0x1a, 0x3a, 0x88, 0x1d, 0x54, 0x4d, 0x26, 0x3a, 0x4d, 0xa4, 0x76, 0xdd, 0xdb, 0x61, 0x1a, 0x79,
	0x4a, 0x6b, 0xa9, 0x75, 0xaa, 0x0a, 0x9c, 0x2c, 0x1c, 0xad, 0x25, 0x16, 0x4f, 0x35, 0x93, 0x59,
	0xa6, 0x5e, 0x3e, 0x8c, 0xab, 0x44, 0x73, 0x5b, 0xf7, 0x29, 0xdc, 0xa5, 0x92, 0x89, 0x15, 0x73,
	0x6f, 0x77, 0x18, 0x4f, 0xac, 0xe3, 0xa9, 0x74, 0xef, 0x1e, 0x0b, 0xfc, 0x14, 0x81, 0x66, 0x8a,
	0xe4, 0xd0, 0xf7, 0xfa, 0x8f, 0xf8, 0xb4, 0x19, 0xa4, 0x96, 0xd7, 0x08, 0xad, 0x5a, 0x23, 0x44,
	0x77, 0x96, 0x43, 0x74, 0x9e, 0x7e, 0x23, 0x40, 0x77, 0xa0, 0xcb, 0x3c, 0x36, 0x7e, 0x9e, 0x5c,
	0x36, 0x19, 0xb6, 0x1a, 0x76, 0x6e, 0x90, 0x85, 0x7f, 0xad, 0x41, 0xc7, 0x52, 0x2b, 0x39, 0x3c,
	0x80, 0xb5, 0xa2, 0xce, 0x39, 0x6e, 0xb8, 0xfc, 0x7f, 0x0d, 0x03, 0xb5, 0x4a, 0xa5, 0x9f, 0xbb,
	0xe7, 0x27, 0xae, 0x99, 0xfb, 0xd1, 0xcd, 0x56, 0x5c, 0x2f, 0xe5, 0x4f, 0xf7, 0xbf, 0xf2, 0x67,
	0xe3, 0xdc, 0xfc, 0xc1, 0xda, 0x99, 0x47, 0x83, 0x00, 0x46, 0xc3, 0xce, 0x55, 0xed, 0xa2, 0xc1,
	0xb0, 0x91, 0x3f, 0xfd, 0xa5, 0xfc, 0xb9, 0x0e, 0x40, 0xe9, 0xf7, 0xa8, 0x8a, 0x5f, 0x16, 0xfc,
	0x1e, 0xf5, 0x18, 0xcc, 0x2f, 0x42, 0x58, 0xf1, 0x29, 0x3e, 0xc1, 0xf9, 0x3d, 0xba, 0xc4, 0x2e,
	0x32, 0x64, 0xdb, 0xcf, 0x90, 0xa5, 0xac, 0xdb, 0x79, 0x73, 0xd6, 0x0d, 0x96, 0xb2, 0x0e, 0x5f,
	0x1b, 0xb2, 0xf0, 0x1f, 0x99, 0x73, 0x8c, 0xb7, 0x2d, 0x65, 0x71, 0x94, 0x6a, 0xed, 0x1e, 0x97,
	0x0c, 0x0f, 0xfe, 0x68, 0xc1, 0xe0, 0x49, 0x3a, 0x95, 0xb6, 0x49, 0xc8, 0x6a, 0x9a, 0x8e, 0xa5,
	0x78, 0x0a, 0xe2, 0xb1, 0x34, 0x4b, 0xff, 0xe6, 0xc4, 0x95, 0x95, 0xb7, 0xd9, 0x21, 0xfe, 0xe5,
	0xdc, 0xbd, 0xfe, 0xe6, 0x7f, 0x7f, 0xe1, 0x5b, 0x77, 0x5a, 0xe2, 0x4b, 0xd8, 0x79, 0x2c, 0x4d,
	0xe3, 0xef, 0x99, 0x6b, 0x23, 0xa3, 0x24, 0xb2, 0xff, 0x45, 0x77, 0x2f, 0x35, 0x06, 0xb8, 0x55,
	0x43, 0xeb, 0xaf, 0x3e, 0x86, 0x9b, 0x63, 0x95, 0x0f, 0xc7, 0xfa, 0x4c, 0x96, 0xf7, 0x86, 0x65,
	0x25, 0xf3, 0x54, 0x56, 0xfc, 0x07, 0x4a, 0x55, 0x43, 0xfc, 0x73, 0x4c, 0x83, 0xfe, 0x69, 0xeb,
	0xa4, 0x43, 0x87, 0xfb, 0xfc, 0xdf, 0x00, 0x00, 0x00, 0xff, 0xff, 0xc7, 0xa9, 0xd4, 0xcd, 0x32,
	0x0f, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// LiveMatchServiceClient is the client API for LiveMatchService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LiveMatchServiceClient interface {
	GetUpcomingMatches(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (LiveMatchService_GetUpcomingMatchesClient, error)
	GetMatchSummary(ctx context.Context, in *IdRequest, opts ...grpc.CallOption) (LiveMatchService_GetMatchSummaryClient, error)
}

type liveMatchServiceClient struct {
	cc *grpc.ClientConn
}

func NewLiveMatchServiceClient(cc *grpc.ClientConn) LiveMatchServiceClient {
	return &liveMatchServiceClient{cc}
}

func (c *liveMatchServiceClient) GetUpcomingMatches(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (LiveMatchService_GetUpcomingMatchesClient, error) {
	stream, err := c.cc.NewStream(ctx, &_LiveMatchService_serviceDesc.Streams[0], "/model.LiveMatchService/GetUpcomingMatches", opts...)
	if err != nil {
		return nil, err
	}
	x := &liveMatchServiceGetUpcomingMatchesClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type LiveMatchService_GetUpcomingMatchesClient interface {
	Recv() (*UpcomingMatchesResponse, error)
	grpc.ClientStream
}

type liveMatchServiceGetUpcomingMatchesClient struct {
	grpc.ClientStream
}

func (x *liveMatchServiceGetUpcomingMatchesClient) Recv() (*UpcomingMatchesResponse, error) {
	m := new(UpcomingMatchesResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *liveMatchServiceClient) GetMatchSummary(ctx context.Context, in *IdRequest, opts ...grpc.CallOption) (LiveMatchService_GetMatchSummaryClient, error) {
	stream, err := c.cc.NewStream(ctx, &_LiveMatchService_serviceDesc.Streams[1], "/model.LiveMatchService/GetMatchSummary", opts...)
	if err != nil {
		return nil, err
	}
	x := &liveMatchServiceGetMatchSummaryClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type LiveMatchService_GetMatchSummaryClient interface {
	Recv() (*MatchSummary, error)
	grpc.ClientStream
}

type liveMatchServiceGetMatchSummaryClient struct {
	grpc.ClientStream
}

func (x *liveMatchServiceGetMatchSummaryClient) Recv() (*MatchSummary, error) {
	m := new(MatchSummary)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// LiveMatchServiceServer is the server API for LiveMatchService service.
type LiveMatchServiceServer interface {
	GetUpcomingMatches(*empty.Empty, LiveMatchService_GetUpcomingMatchesServer) error
	GetMatchSummary(*IdRequest, LiveMatchService_GetMatchSummaryServer) error
}

// UnimplementedLiveMatchServiceServer can be embedded to have forward compatible implementations.
type UnimplementedLiveMatchServiceServer struct {
}

func (*UnimplementedLiveMatchServiceServer) GetUpcomingMatches(req *empty.Empty, srv LiveMatchService_GetUpcomingMatchesServer) error {
	return status.Errorf(codes.Unimplemented, "method GetUpcomingMatches not implemented")
}
func (*UnimplementedLiveMatchServiceServer) GetMatchSummary(req *IdRequest, srv LiveMatchService_GetMatchSummaryServer) error {
	return status.Errorf(codes.Unimplemented, "method GetMatchSummary not implemented")
}

func RegisterLiveMatchServiceServer(s *grpc.Server, srv LiveMatchServiceServer) {
	s.RegisterService(&_LiveMatchService_serviceDesc, srv)
}

func _LiveMatchService_GetUpcomingMatches_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(empty.Empty)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(LiveMatchServiceServer).GetUpcomingMatches(m, &liveMatchServiceGetUpcomingMatchesServer{stream})
}

type LiveMatchService_GetUpcomingMatchesServer interface {
	Send(*UpcomingMatchesResponse) error
	grpc.ServerStream
}

type liveMatchServiceGetUpcomingMatchesServer struct {
	grpc.ServerStream
}

func (x *liveMatchServiceGetUpcomingMatchesServer) Send(m *UpcomingMatchesResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _LiveMatchService_GetMatchSummary_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(IdRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(LiveMatchServiceServer).GetMatchSummary(m, &liveMatchServiceGetMatchSummaryServer{stream})
}

type LiveMatchService_GetMatchSummaryServer interface {
	Send(*MatchSummary) error
	grpc.ServerStream
}

type liveMatchServiceGetMatchSummaryServer struct {
	grpc.ServerStream
}

func (x *liveMatchServiceGetMatchSummaryServer) Send(m *MatchSummary) error {
	return x.ServerStream.SendMsg(m)
}

var _LiveMatchService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "model.LiveMatchService",
	HandlerType: (*LiveMatchServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetUpcomingMatches",
			Handler:       _LiveMatchService_GetUpcomingMatches_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "GetMatchSummary",
			Handler:       _LiveMatchService_GetMatchSummary_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "live.proto",
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: user.proto

package model

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GroupIdRequest struct {
	Ids                  []string `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GroupIdRequest) Reset()         { *m = GroupIdRequest{} }
func (m *GroupIdRequest) String() string { return proto.CompactTextString(m) }
func (*GroupIdRequest) ProtoMessage()    {}
func (*GroupIdRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{0}
}

func (m *GroupIdRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GroupIdRequest.Unmarshal(m, b)
}
func (m *GroupIdRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GroupIdRequest.Marshal(b, m, deterministic)
}
func (m *GroupIdRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GroupIdRequest.Merge(m, src)
}
func (m *GroupIdRequest) XXX_Size() int {
	return xxx_messageInfo_GroupIdRequest.Size(m)
}
func (m *GroupIdRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GroupIdRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GroupIdRequest proto.InternalMessageInfo

func (m *GroupIdRequest) GetIds() []string {
	if m != nil {
		return m.Ids
	}
	return nil
}

type UserResponse struct {
	Users                []*User  `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserResponse) Reset()         { *m = UserResponse{} }
func (m *UserResponse) String() string { return proto.CompactTextString(m) }
func (*UserResponse) ProtoMessage()    {}
func (*UserResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{1}
}

func (m *UserResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserResponse.Unmarshal(m, b)
}
func (m *UserResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserResponse.Marshal(b, m, deterministic)
}
func (m *UserResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserResponse.Merge(m, src)
}
func (m *UserResponse) XXX_Size() int {
	return xxx_messageInfo_UserResponse.Size(m)
}
func (m *UserResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UserResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UserResponse proto.InternalMessageInfo

func (m *UserResponse) GetUsers() []*User {
	if m != nil {
		return m.Users
	}
	return nil
}

type User struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	FirstName            string   `protobuf:"bytes,2,opt,name=firstName,proto3" json:"firstName,omitempty"`
	Surname              string   `protobuf:"bytes,3,opt,name=surname,proto3" json:"surname,omitempty"`
	PredictedWinner      string   `protobuf:"bytes,4,opt,name=predictedWinner,proto3" json:"predictedWinner,omitempty"`
	Score                int32    `protobuf:"varint,5,opt,name=score,proto3" json:"score,omitempty"`
	Email                string   `protobuf:"bytes,6,opt,name=email,proto3" json:"email,omitempty"`
	Password             string   `protobuf:"bytes,7,opt,name=password,proto3" json:"password,omitempty"`
	Signature            string   `protobuf:"bytes,8,opt,name=signature,proto3" json:"signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *User) Reset()         { *m = User{} }
func (m *User) String() string { return proto.CompactTextString(m) }
func (*User) ProtoMessage()    {}
func (*User) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{2}
}

func (m *User) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_User.Unmarshal(m, b)
}
func (m *User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_User.Marshal(b, m, deterministic)
}
func (m *User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_User.Merge(m, src)
}
func (m *User) XXX_Size() int {
	return xxx_messageInfo_User.Size(m)
}
func (m *User) XXX_DiscardUnknown() {
	xxx_messageInfo_User.DiscardUnknown(m)
}

var xxx_messageInfo_User proto.InternalMessageInfo

func (m *User) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *User) GetFirstName() string {
	if m != nil {
		return m.FirstName
	}
	return ""
}

func (m *User) GetSurname() string {
	if m != nil {
		return m.Surname
	}
	return ""
}

func (m *User) GetPredictedWinner() string {
	if m != nil {
		return m.PredictedWinner
	}
	return ""
}

func (m *User) GetScore() int32 {
	if m != nil {
		return m.Score
	}
	return 0
}

func (m *User) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *User) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *User) GetSignature() string {
	if m != nil {
		return m.Signature
	}
	return ""
}

type RankResponse struct {
	Rank                 int64    `protobuf:"varint,1,opt,name=rank,proto3" json:"rank,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RankResponse) Reset()         { *m = RankResponse{} }
func (m *RankResponse) String() string { return proto.CompactTextString(m) }
func (*RankResponse) ProtoMessage()    {}
func (*RankResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{3}
}

func (m *RankResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RankResponse.Unmarshal(m, b)
}
func (m *RankResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RankResponse.Marshal(b, m, deterministic)
}
func (m *RankResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RankResponse.Merge(m, src)
}
func (m *RankResponse) XXX_Size() int {
	return xxx_messageInfo_RankResponse.Size(m)
}
func (m *RankResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RankResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RankResponse proto.InternalMessageInfo

func (m *RankResponse) GetRank() int64 {
	if m != nil {
		return m.Rank
	}
	return 0
}

type CountResponse struct {
	Count                int64    `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CountResponse) Reset()         { *m = CountResponse{} }
func (m *CountResponse) String() string { return proto.CompactTextString(m) }
func (*CountResponse) ProtoMessage()    {}
func (*CountResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{4}
}

func (m *CountResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CountResponse.Unmarshal(m, b)
}
func (m *CountResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CountResponse.Marshal(b, m, deterministic)
}
func (m *CountResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CountResponse.Merge(m, src)
}
func (m *CountResponse) XXX_Size() int {
	return xxx_messageInfo_CountResponse.Size(m)
}
func (m *CountResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CountResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CountResponse proto.InternalMessageInfo

func (m *CountResponse) GetCount() int64 {
	if m != nil {
		return m.Count
	}
	return 0
}

type GroupRankRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Ids                  []string `protobuf:"bytes,2,rep,name=ids,proto3" json:"ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GroupRankRequest) Reset()         { *m = GroupRankRequest{} }
func (m *GroupRankRequest) String() string { return proto.CompactTextString(m) }
func (*GroupRankRequest) ProtoMessage()    {}
func (*GroupRankRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{5}
}

func (m *GroupRankRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GroupRankRequest.Unmarshal(m, b)
}
func (m *GroupRankRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GroupRankRequest.Marshal(b, m, deterministic)
}
func (m *GroupRankRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GroupRankRequest.Merge(m, src)
}
func (m *GroupRankRequest) XXX_Size() int {
	return xxx_messageInfo_GroupRankRequest.Size(m)
}
func (m *GroupRankRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GroupRankRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GroupRankRequest proto.InternalMessageInfo

func (m *GroupRankRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *GroupRankRequest) GetIds() []string {
	if m != nil {
		return m.Ids
	}
	return nil
}

type UpdatePasswordRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Password             string   `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdatePasswordRequest) Reset()         { *m = UpdatePasswordRequest{} }
func (m *UpdatePasswordRequest) String() string { return proto.CompactTextString(m) }
func (*UpdatePasswordRequest) ProtoMessage()    {}
func (*UpdatePasswordRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{6}
}

func (m *UpdatePasswordRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdatePasswordRequest.Unmarshal(m, b)
}
func (m *UpdatePasswordRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdatePasswordRequest.Marshal(b, m, deterministic)
}
func (m *UpdatePasswordRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdatePasswordRequest.Merge(m, src)
}
func (m *UpdatePasswordRequest) XXX_Size() int {
	return xxx_messageInfo_UpdatePasswordRequest.Size(m)
}
func (m *UpdatePasswordRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdatePasswordRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdatePasswordRequest proto.InternalMessageInfo

func (m *UpdatePasswordRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UpdatePasswordRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type UpdatePasswordResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdatePasswordResponse) Reset()         { *m = UpdatePasswordResponse{} }
func (m *UpdatePasswordResponse) String() string { return proto.CompactTextString(m) }
func (*UpdatePasswordResponse) ProtoMessage()    {}
func (*UpdatePasswordResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{7}
}

func (m *UpdatePasswordResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdatePasswordResponse.Unmarshal(m, b)
}
func (m *UpdatePasswordResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdatePasswordResponse.Marshal(b, m, deterministic)
}
func (m *UpdatePasswordResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdatePasswordResponse.Merge(m, src)
}
func (m *UpdatePasswordResponse) XXX_Size() int {
	return xxx_messageInfo_UpdatePasswordResponse.Size(m)
}
func (m *UpdatePasswordResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdatePasswordResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdatePasswordResponse proto.InternalMessageInfo

type UpdateSignatureRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Signature            string   `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateSignatureRequest) Reset()         { *m = UpdateSignatureRequest{} }
func (m *UpdateSignatureRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateSignatureRequest) ProtoMessage()    {}
func (*UpdateSignatureRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{8}
}

func (m *UpdateSignatureRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateSignatureRequest.Unmarshal(m, b)
}
func (m *UpdateSignatureRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateSignatureRequest.Marshal(b, m, deterministic)
}
func (m *UpdateSignatureRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateSignatureRequest.Merge(m, src)
}
func (m *UpdateSignatureRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateSignatureRequest.Size(m)
}
func (m *UpdateSignatureRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateSignatureRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateSignatureRequest proto.InternalMessageInfo

func (m *UpdateSignatureRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UpdateSignatureRequest) GetSignature() string {
	if m != nil {
		return m.Signature
	}
	return ""
}

type UpdateSignatureResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateSignatureResponse) Reset()         { *m = UpdateSignatureResponse{} }
func (m *UpdateSignatureResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateSignatureResponse) ProtoMessage()    {}
func (*UpdateSignatureResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{9}
}

func (m *UpdateSignatureResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateSignatureResponse.Unmarshal(m, b)
}
func (m *UpdateSignatureResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateSignatureResponse.Marshal(b, m, deterministic)
}
func (m *UpdateSignatureResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateSignatureResponse.Merge(m, src)
}
func (m *UpdateSignatureResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateSignatureResponse.Size(m)
}
func (m *UpdateSignatureResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateSignatureResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateSignatureResponse proto.InternalMessageInfo

type CreateRequest struct {
	FirstName            string   `protobuf:"bytes,1,opt,name=firstName,proto3" json:"firstName,omitempty"`
	Surname              string   `protobuf:"bytes,2,opt,name=surname,proto3" json:"surname,omitempty"`
	Email                string   `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	Password             string   `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`
	PredictedWinner      string   `protobuf:"bytes,5,opt,name=predictedWinner,proto3" json:"predictedWinner,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateRequest) Reset()         { *m = CreateRequest{} }
func (m *CreateRequest) String() string { return proto.CompactTextString(m) }
func (*CreateRequest) ProtoMessage()    {}
func (*CreateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{10}
}

func (m *CreateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateRequest.Unmarshal(m, b)
}
func (m *CreateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateRequest.Marshal(b, m, deterministic)
}
func (m *CreateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateRequest.Merge(m, src)
}
func (m *CreateRequest) XXX_Size() int {
	return xxx_messageInfo_CreateRequest.Size(m)
}
func (m *CreateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateRequest proto.InternalMessageInfo

func (m *CreateRequest) GetFirstName() string {
	if m != nil {
		return m.FirstName
	}
	return ""
}

func (m *CreateRequest) GetSurname() string {
	if m != nil {
		return m.Surname
	}
	return ""
}

func (m *CreateRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *CreateRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *CreateRequest) GetPredictedWinner() string {
	if m != nil {
		return m.PredictedWinner
	}
	return ""
}

type CreateResponse struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateResponse) Reset()         { *m = CreateResponse{} }
func (m *CreateResponse) String() string { return proto.CompactTextString(m) }
func (*CreateResponse) ProtoMessage()    {}
func (*CreateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{11}
}

func (m *CreateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateResponse.Unmarshal(m, b)
}
func (m *CreateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateResponse.Marshal(b, m, deterministic)
}
func (m *CreateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateResponse.Merge(m, src)
}
func (m *CreateResponse) XXX_Size() int {
	return xxx_messageInfo_CreateResponse.Size(m)
}
func (m *CreateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateResponse proto.InternalMessageInfo

func (m *CreateResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func init() {
	proto.RegisterType((*GroupIdRequest)(nil), "model.GroupIdRequest")
	proto.RegisterType((*UserResponse)(nil), "model.UserResponse")
	proto.RegisterType((*User)(nil), "model.User")
	proto.RegisterType((*RankResponse)(nil), "model.RankResponse")
	proto.RegisterType((*CountResponse)(nil), "model.CountResponse")
	proto.RegisterType((*GroupRankRequest)(nil), "model.GroupRankRequest")
	proto.RegisterType((*UpdatePasswordRequest)(nil), "model.UpdatePasswordRequest")
	proto.RegisterType((*UpdatePasswordResponse)(nil), "model.UpdatePasswordResponse")
	proto.RegisterType((*UpdateSignatureRequest)(nil), "model.UpdateSignatureRequest")
	proto.RegisterType((*UpdateSignatureResponse)(nil), "model.UpdateSignatureResponse")
	proto.RegisterType((*CreateRequest)(nil), "model.CreateRequest")
	proto.RegisterType((*CreateResponse)(nil), "model.CreateResponse")
}

func init() { proto.RegisterFile("user.proto", fileDescriptor_116e343673f7ffaf) }

var fileDescriptor_116e343673f7ffaf = []byte{
	// 629 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x54, 0xdd, 0x4e, 0xd4, 0x4e,
	0x14, 0x4f, 0xbb, 0x5b, 0x3e, 0xce, 0xc2, 0xb2, 0x99, 0x3f, 0x1f, 0xfd, 0x57, 0x34, 0x6b, 0xa3,
	0xc9, 0x5e, 0x95, 0x88, 0x18, 0x13, 0x63, 0x34, 0x42, 0x60, 0xc3, 0x85, 0x4a, 0x4a, 0x88, 0xd7,
	0xa5, 0x3d, 0x60, 0x43, 0xdb, 0xa9, 0x33, 0x53, 0xcc, 0x3e, 0x8f, 0xcf, 0xe3, 0x2b, 0xf8, 0x2c,
	0x66, 0x66, 0xda, 0xd2, 0x96, 0xad, 0x77, 0x73, 0x7e, 0xe7, 0xfb, 0x9c, 0xdf, 0x19, 0x80, 0x82,
	0x23, 0xf3, 0x72, 0x46, 0x05, 0x25, 0x56, 0x4a, 0x23, 0x4c, 0x9c, 0x27, 0xb7, 0x94, 0xde, 0x26,
	0x78, 0xa0, 0xc0, 0xeb, 0xe2, 0xe6, 0x00, 0xd3, 0x5c, 0x2c, 0xb4, 0x8d, 0xb3, 0xc9, 0xf0, 0x47,
	0x81, 0x5c, 0x68, 0xd1, 0x75, 0x61, 0x3c, 0x67, 0xb4, 0xc8, 0xcf, 0x23, 0x5f, 0xe3, 0x64, 0x02,
	0x83, 0x38, 0xe2, 0xb6, 0x31, 0x1d, 0xcc, 0xd6, 0x7d, 0xf9, 0x74, 0x5f, 0xc1, 0xc6, 0x15, 0x47,
	0xe6, 0x23, 0xcf, 0x69, 0xc6, 0x91, 0x3c, 0x07, 0x4b, 0x26, 0xd5, 0x36, 0xa3, 0xc3, 0x91, 0xa7,
	0xd2, 0x7a, 0xca, 0x46, 0x6b, 0xdc, 0x3f, 0x06, 0x0c, 0xa5, 0x4c, 0xc6, 0x60, 0xc6, 0x91, 0x6d,
	0x4c, 0x8d, 0xd9, 0xba, 0x6f, 0xc6, 0x11, 0xd9, 0x87, 0xf5, 0x9b, 0x98, 0x71, 0xf1, 0x25, 0x48,
	0xd1, 0x36, 0x15, 0xfc, 0x00, 0x10, 0x1b, 0x56, 0x79, 0xc1, 0x32, 0xa9, 0x1b, 0x28, 0x5d, 0x25,
	0x92, 0x19, 0x6c, 0xe5, 0x0c, 0xa3, 0x38, 0x14, 0x18, 0x7d, 0x8b, 0xb3, 0x0c, 0x99, 0x3d, 0x54,
	0x16, 0x5d, 0x98, 0x6c, 0x83, 0xc5, 0x43, 0xca, 0xd0, 0xb6, 0xa6, 0xc6, 0xcc, 0xf2, 0xb5, 0x20,
	0x51, 0x4c, 0x83, 0x38, 0xb1, 0x57, 0x94, 0x97, 0x16, 0x88, 0x03, 0x6b, 0x79, 0xc0, 0xf9, 0x4f,
	0xca, 0x22, 0x7b, 0x55, 0x29, 0x6a, 0x59, 0x56, 0xca, 0xe3, 0xdb, 0x2c, 0x10, 0x05, 0x43, 0x7b,
	0x4d, 0x57, 0x5a, 0x03, 0xae, 0x0b, 0x1b, 0x7e, 0x90, 0xdd, 0xd5, 0x33, 0x21, 0x30, 0x64, 0x41,
	0x76, 0xa7, 0x3a, 0x1d, 0xf8, 0xea, 0xed, 0xbe, 0x84, 0xcd, 0x13, 0x5a, 0x64, 0xa2, 0x36, 0xda,
	0x06, 0x2b, 0x94, 0x40, 0x69, 0xa5, 0x05, 0xf7, 0x08, 0x26, 0x6a, 0x05, 0x3a, 0x9e, 0x5e, 0x42,
	0x77, 0x6c, 0xe5, 0x52, 0xcc, 0x87, 0xa5, 0x9c, 0xc0, 0xce, 0x55, 0x1e, 0x05, 0x02, 0x2f, 0xca,
	0x82, 0xfb, 0x5c, 0x9b, 0x3d, 0x9a, 0xed, 0x1e, 0x5d, 0x1b, 0x76, 0xbb, 0x41, 0x74, 0xa9, 0xee,
	0x59, 0xa5, 0xb9, 0xac, 0x5a, 0xee, 0x8b, 0xdf, 0x9a, 0x93, 0xd9, 0x9d, 0xd3, 0xff, 0xb0, 0xf7,
	0x28, 0x4e, 0x99, 0xe2, 0x97, 0x01, 0x9b, 0x27, 0x0c, 0x03, 0x51, 0x87, 0x6e, 0x91, 0xc3, 0xf8,
	0x07, 0x39, 0xcc, 0x36, 0x39, 0xea, 0xe5, 0x0e, 0xfa, 0x96, 0x3b, 0xec, 0x2c, 0x77, 0x09, 0x9d,
	0xac, 0xa5, 0x74, 0x72, 0xa7, 0x30, 0xae, 0x8a, 0x2c, 0xb7, 0xd8, 0x19, 0xc0, 0xe1, 0xef, 0x21,
	0x8c, 0x24, 0xd7, 0x2f, 0x91, 0xdd, 0xc7, 0x21, 0x92, 0x77, 0x30, 0x9a, 0xa3, 0xf8, 0x94, 0x24,
	0x12, 0xe4, 0x64, 0xd7, 0xd3, 0xe7, 0xe8, 0x55, 0xe7, 0xe8, 0x9d, 0xca, 0x73, 0x74, 0xfe, 0x6b,
	0x9e, 0x4d, 0x15, 0xfb, 0x03, 0x4c, 0x1a, 0xbe, 0xc7, 0x8b, 0xf3, 0x88, 0x93, 0x9d, 0xd2, 0xb0,
	0x7d, 0xa7, 0xcb, 0xfd, 0xdf, 0xc2, 0x78, 0x8e, 0xe2, 0xeb, 0x3d, 0xb2, 0x20, 0x49, 0x24, 0xa1,
	0xc8, 0xa4, 0x34, 0x7b, 0xec, 0xd8, 0xe2, 0xef, 0x47, 0xd8, 0x9a, 0xa3, 0x90, 0xd0, 0x19, 0x65,
	0x2a, 0x13, 0xd9, 0x6b, 0xe6, 0x6d, 0x90, 0x73, 0x79, 0x80, 0xf7, 0xb0, 0x31, 0x47, 0x21, 0x8b,
	0x51, 0x9c, 0xef, 0x6d, 0x7b, 0xbb, 0x74, 0x6e, 0x5f, 0xc6, 0xa1, 0xaa, 0x5b, 0x7a, 0x1f, 0x2f,
	0x4e, 0xd5, 0xf6, 0xaa, 0x24, 0x4a, 0xaa, 0x32, 0x37, 0xbf, 0x1a, 0xf2, 0x19, 0xc6, 0x6d, 0xf2,
	0x92, 0xfd, 0x4a, 0xbd, 0xec, 0x30, 0x9c, 0xa7, 0x3d, 0xda, 0xb2, 0x84, 0x0b, 0xd8, 0xea, 0x30,
	0x95, 0xb4, 0x3d, 0xba, 0x97, 0xe0, 0x3c, 0xeb, 0x53, 0x97, 0x11, 0xdf, 0xc0, 0x8a, 0xa6, 0x0e,
	0xa9, 0x9b, 0x6e, 0xd2, 0xdd, 0xd9, 0xe9, 0xa0, 0xda, 0xed, 0xf8, 0x05, 0x4c, 0x43, 0x9a, 0x7a,
	0x21, 0xff, 0x8e, 0xf9, 0x91, 0x97, 0x33, 0x4c, 0x63, 0x64, 0x25, 0x2d, 0x29, 0xf3, 0xe4, 0x07,
	0x7b, 0x61, 0x5c, 0xaf, 0xa8, 0xb9, 0xbe, 0xfe, 0x1b, 0x00, 0x00, 0xff, 0xff, 0xae, 0x1c, 0x76,
	0x2b, 0x00, 0x06, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// UserServiceClient is the client API for UserService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UserServiceClient interface {
	GetAllUsers(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*UserResponse, error)
	GetAllUsersByIds(ctx context.Context, in *GroupIdRequest, opts ...grpc.CallOption) (*UserResponse, error)
	GetOverallRank(ctx context.Context, in *IdRequest, opts ...grpc.CallOption) (*RankResponse, error)
	GetRankForGroup(ctx context.Context, in *GroupRankRequest, opts ...grpc.CallOption) (*RankResponse, error)
	GetUserCount(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*CountResponse, error)
	GetUserByEmail(ctx context.Context, in *EmailRequest, opts ...grpc.CallOption) (*User, error)
	UpdatePassword(ctx context.Context, in *UpdatePasswordRequest, opts ...grpc.CallOption) (*UpdatePasswordResponse, error)
	UpdateSignature(ctx context.Context, in *UpdateSignatureRequest, opts ...grpc.CallOption) (*UpdateSignatureResponse, error)
	Create(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*CreateResponse, error)
}

type userServiceClient struct {
	cc *grpc.ClientConn
}

func NewUserServiceClient(cc *grpc.ClientConn) UserServiceClient {
	return &userServiceClient{cc}
}

func (c *userServiceClient) GetAllUsers(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*UserResponse, error) {
	out := new(UserResponse)
	err := c.cc.Invoke(ctx, "/model.UserService/GetAllUsers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) GetAllUsersByIds(ctx context.Context, in *GroupIdRequest, opts ...grpc.CallOption) (*UserResponse, error) {
	out := new(UserResponse)
	err := c.cc.Invoke(ctx, "/model.UserService/GetAllUsersByIds", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) GetOverallRank(ctx context.Context, in *IdRequest, opts ...grpc.CallOption) (*RankResponse, error) {
	out := new(RankResponse)
	err := c.cc.Invoke(ctx, "/model.UserService/GetOverallRank", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) GetRankForGroup(ctx context.Context, in *GroupRankRequest, opts ...grpc.CallOption) (*RankResponse, error) {
	out := new(RankResponse)
	err := c.cc.Invoke(ctx, "/model.UserService/GetRankForGroup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) GetUserCount(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*CountResponse, error) {
	out := new(CountResponse)
	err := c.cc.Invoke(ctx, "/model.UserService/GetUserCount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) GetUserByEmail(ctx context.Context, in *EmailRequest, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := c.cc.Invoke(ctx, "/model.UserService/GetUserByEmail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) UpdatePassword(ctx context.Context, in *UpdatePasswordRequest, opts ...grpc.CallOption) (*UpdatePasswordResponse, error) {
	out := new(UpdatePasswordResponse)
	err := c.cc.Invoke(ctx, "/model.UserService/UpdatePassword", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) UpdateSignature(ctx context.Context, in *UpdateSignatureRequest, opts ...grpc.CallOption) (*UpdateSignatureResponse, error) {
	out := new(UpdateSignatureResponse)
	err := c.cc.Invoke(ctx, "/model.UserService/UpdateSignature", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) Create(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*CreateResponse, error) {
	out := new(CreateResponse)
	err := c.cc.Invoke(ctx, "/model.UserService/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UserServiceServer is the server API for UserService service.
type UserServiceServer interface {
	GetAllUsers(context.Context, *empty.Empty) (*UserResponse, error)
	GetAllUsersByIds(context.Context, *GroupIdRequest) (*UserResponse, error)
	GetOverallRank(context.Context, *IdRequest) (*RankResponse, error)
	GetRankForGroup(context.Context, *GroupRankRequest) (*RankResponse, error)
	GetUserCount(context.Context, *empty.Empty) (*CountResponse, error)
	GetUserByEmail(context.Context, *EmailRequest) (*User, error)
	UpdatePassword(context.Context, *UpdatePasswordRequest) (*UpdatePasswordResponse, error)
	UpdateSignature(context.Context, *UpdateSignatureRequest) (*UpdateSignatureResponse, error)
	Create(context.Context, *CreateRequest) (*CreateResponse, error)
}

// UnimplementedUserServiceServer can be embedded to have forward compatible implementations.
type UnimplementedUserServiceServer struct {
}

func (*UnimplementedUserServiceServer) GetAllUsers(ctx context.Context, req *empty.Empty) (*UserResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAllUsers not implemented")
}
func (*UnimplementedUserServiceServer) GetAllUsersByIds(ctx context.Context, req *GroupIdRequest) (*UserResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAllUsersByIds not implemented")
}
func (*UnimplementedUserServiceServer) GetOverallRank(ctx context.Context, req *IdRequest) (*RankResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetOverallRank not implemented")
}
func (*UnimplementedUserServiceServer) GetRankForGroup(ctx context.Context, req *GroupRankRequest) (*RankResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRankForGroup not implemented")
}
func (*UnimplementedUserServiceServer) GetUserCount(ctx context.Context, req *empty.Empty) (*CountResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserCount not implemented")
}
func (*UnimplementedUserServiceServer) GetUserByEmail(ctx context.Context, req *EmailRequest) (*User, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserByEmail not implemented")
}
func (*UnimplementedUserServiceServer) UpdatePassword(ctx context.Context, req *UpdatePasswordRequest) (*UpdatePasswordResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdatePassword not implemented")
}
func (*UnimplementedUserServiceServer) UpdateSignature(ctx context.Context, req *UpdateSignatureRequest) (*UpdateSignatureResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateSignature not implemented")
}
func (*UnimplementedUserServiceServer) Create(ctx context.Context, req *CreateRequest) (*CreateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}

func RegisterUserServiceServer(s *grpc.Server, srv UserServiceServer) {
	s.RegisterService(&_UserService_serviceDesc, srv)
}

func _UserService_GetAllUsers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).GetAllUsers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/model.UserService/GetAllUsers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).GetAllUsers(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_GetAllUsersByIds_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GroupIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).GetAllUsersByIds(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/model.UserService/GetAllUsersByIds",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).GetAllUsersByIds(ctx, req.(*GroupIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_GetOverallRank_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).GetOverallRank(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/model.UserService/GetOverallRank",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).GetOverallRank(ctx, req.(*IdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_GetRankForGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GroupRankRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).GetRankForGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/model.UserService/GetRankForGroup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).GetRankForGroup(ctx, req.(*GroupRankRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_GetUserCount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).GetUserCount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/model.UserService/GetUserCount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).GetUserCount(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_GetUserByEmail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmailRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).GetUserByEmail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/model.UserService/GetUserByEmail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).GetUserByEmail(ctx, req.(*EmailRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_UpdatePassword_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdatePasswordRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).UpdatePassword(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/model.UserService/UpdatePassword",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).UpdatePassword(ctx, req.(*UpdatePasswordRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_UpdateSignature_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateSignatureRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).UpdateSignature(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/model.UserService/UpdateSignature",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).UpdateSignature(ctx, req.(*UpdateSignatureRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/model.UserService/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).Create(ctx, req.(*CreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _UserService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "model.UserService",
	HandlerType: (*UserServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetAllUsers",
			Handler:    _UserService_GetAllUsers_Handler,
		},
		{
			MethodName: "GetAllUsersByIds",
			Handler:    _UserService_GetAllUsersByIds_Handler,
		},
		{
			MethodName: "GetOverallRank",
			Handler:    _UserService_GetOverallRank_Handler,
		},
		{
			MethodName: "GetRankForGroup",
			Handler:    _UserService_GetRankForGroup_Handler,
		},
		{
			MethodName: "GetUserCount",
			Handler:    _UserService_GetUserCount_Handler,
		},
		{
			MethodName: "GetUserByEmail",
			Handler:    _UserService_GetUserByEmail_Handler,
		},
		{
			MethodName: "UpdatePassword",
			Handler:    _UserService_UpdatePassword_Handler,
		},
		{
			MethodName: "UpdateSignature",
			Handler:    _UserService_UpdateSignature_Handler,
		},
		{
			MethodName: "Create",
			Handler:    _UserService_Create_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "user.proto",
}

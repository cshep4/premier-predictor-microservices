// Code generated by protoc-gen-go. DO NOT EDIT.
// source: auth.proto

package model

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import empty "github.com/golang/protobuf/ptypes/empty"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type LoginResponse struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Token                string   `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoginResponse) Reset()         { *m = LoginResponse{} }
func (m *LoginResponse) String() string { return proto.CompactTextString(m) }
func (*LoginResponse) ProtoMessage()    {}
func (*LoginResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_auth_72a5203105dc8aac, []int{0}
}
func (m *LoginResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoginResponse.Unmarshal(m, b)
}
func (m *LoginResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoginResponse.Marshal(b, m, deterministic)
}
func (dst *LoginResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoginResponse.Merge(dst, src)
}
func (m *LoginResponse) XXX_Size() int {
	return xxx_messageInfo_LoginResponse.Size(m)
}
func (m *LoginResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LoginResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LoginResponse proto.InternalMessageInfo

func (m *LoginResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *LoginResponse) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type RegisterRequest struct {
	FirstName            string   `protobuf:"bytes,1,opt,name=firstName,proto3" json:"firstName,omitempty"`
	Surname              string   `protobuf:"bytes,2,opt,name=surname,proto3" json:"surname,omitempty"`
	Email                string   `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	Password             string   `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`
	Confirmation         string   `protobuf:"bytes,5,opt,name=confirmation,proto3" json:"confirmation,omitempty"`
	PredictedWinner      string   `protobuf:"bytes,6,opt,name=predictedWinner,proto3" json:"predictedWinner,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegisterRequest) Reset()         { *m = RegisterRequest{} }
func (m *RegisterRequest) String() string { return proto.CompactTextString(m) }
func (*RegisterRequest) ProtoMessage()    {}
func (*RegisterRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_auth_72a5203105dc8aac, []int{1}
}
func (m *RegisterRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterRequest.Unmarshal(m, b)
}
func (m *RegisterRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterRequest.Marshal(b, m, deterministic)
}
func (dst *RegisterRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterRequest.Merge(dst, src)
}
func (m *RegisterRequest) XXX_Size() int {
	return xxx_messageInfo_RegisterRequest.Size(m)
}
func (m *RegisterRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterRequest proto.InternalMessageInfo

func (m *RegisterRequest) GetFirstName() string {
	if m != nil {
		return m.FirstName
	}
	return ""
}

func (m *RegisterRequest) GetSurname() string {
	if m != nil {
		return m.Surname
	}
	return ""
}

func (m *RegisterRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *RegisterRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *RegisterRequest) GetConfirmation() string {
	if m != nil {
		return m.Confirmation
	}
	return ""
}

func (m *RegisterRequest) GetPredictedWinner() string {
	if m != nil {
		return m.PredictedWinner
	}
	return ""
}

type ValidateRequest struct {
	Token                string   `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ValidateRequest) Reset()         { *m = ValidateRequest{} }
func (m *ValidateRequest) String() string { return proto.CompactTextString(m) }
func (*ValidateRequest) ProtoMessage()    {}
func (*ValidateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_auth_72a5203105dc8aac, []int{2}
}
func (m *ValidateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ValidateRequest.Unmarshal(m, b)
}
func (m *ValidateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ValidateRequest.Marshal(b, m, deterministic)
}
func (dst *ValidateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ValidateRequest.Merge(dst, src)
}
func (m *ValidateRequest) XXX_Size() int {
	return xxx_messageInfo_ValidateRequest.Size(m)
}
func (m *ValidateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ValidateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ValidateRequest proto.InternalMessageInfo

func (m *ValidateRequest) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type ResetPasswordRequest struct {
	Email                string   `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	Signature            string   `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
	Password             string   `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	Confirmation         string   `protobuf:"bytes,4,opt,name=confirmation,proto3" json:"confirmation,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResetPasswordRequest) Reset()         { *m = ResetPasswordRequest{} }
func (m *ResetPasswordRequest) String() string { return proto.CompactTextString(m) }
func (*ResetPasswordRequest) ProtoMessage()    {}
func (*ResetPasswordRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_auth_72a5203105dc8aac, []int{3}
}
func (m *ResetPasswordRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResetPasswordRequest.Unmarshal(m, b)
}
func (m *ResetPasswordRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResetPasswordRequest.Marshal(b, m, deterministic)
}
func (dst *ResetPasswordRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResetPasswordRequest.Merge(dst, src)
}
func (m *ResetPasswordRequest) XXX_Size() int {
	return xxx_messageInfo_ResetPasswordRequest.Size(m)
}
func (m *ResetPasswordRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ResetPasswordRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ResetPasswordRequest proto.InternalMessageInfo

func (m *ResetPasswordRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *ResetPasswordRequest) GetSignature() string {
	if m != nil {
		return m.Signature
	}
	return ""
}

func (m *ResetPasswordRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *ResetPasswordRequest) GetConfirmation() string {
	if m != nil {
		return m.Confirmation
	}
	return ""
}

func init() {
	proto.RegisterType((*LoginResponse)(nil), "model.LoginResponse")
	proto.RegisterType((*RegisterRequest)(nil), "model.RegisterRequest")
	proto.RegisterType((*ValidateRequest)(nil), "model.ValidateRequest")
	proto.RegisterType((*ResetPasswordRequest)(nil), "model.ResetPasswordRequest")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// AuthServiceClient is the client API for AuthService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AuthServiceClient interface {
	Login(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*LoginResponse, error)
	Register(ctx context.Context, in *RegisterRequest, opts ...grpc.CallOption) (*LoginResponse, error)
	Validate(ctx context.Context, in *ValidateRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	InitiatePasswordReset(ctx context.Context, in *EmailRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	ResetPassword(ctx context.Context, in *ResetPasswordRequest, opts ...grpc.CallOption) (*empty.Empty, error)
}

type authServiceClient struct {
	cc *grpc.ClientConn
}

func NewAuthServiceClient(cc *grpc.ClientConn) AuthServiceClient {
	return &authServiceClient{cc}
}

func (c *authServiceClient) Login(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*LoginResponse, error) {
	out := new(LoginResponse)
	err := c.cc.Invoke(ctx, "/model.AuthService/Login", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authServiceClient) Register(ctx context.Context, in *RegisterRequest, opts ...grpc.CallOption) (*LoginResponse, error) {
	out := new(LoginResponse)
	err := c.cc.Invoke(ctx, "/model.AuthService/Register", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authServiceClient) Validate(ctx context.Context, in *ValidateRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/model.AuthService/Validate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authServiceClient) InitiatePasswordReset(ctx context.Context, in *EmailRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/model.AuthService/InitiatePasswordReset", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authServiceClient) ResetPassword(ctx context.Context, in *ResetPasswordRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/model.AuthService/ResetPassword", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AuthServiceServer is the server API for AuthService service.
type AuthServiceServer interface {
	Login(context.Context, *LoginRequest) (*LoginResponse, error)
	Register(context.Context, *RegisterRequest) (*LoginResponse, error)
	Validate(context.Context, *ValidateRequest) (*empty.Empty, error)
	InitiatePasswordReset(context.Context, *EmailRequest) (*empty.Empty, error)
	ResetPassword(context.Context, *ResetPasswordRequest) (*empty.Empty, error)
}

func RegisterAuthServiceServer(s *grpc.Server, srv AuthServiceServer) {
	s.RegisterService(&_AuthService_serviceDesc, srv)
}

func _AuthService_Login_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoginRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServiceServer).Login(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/model.AuthService/Login",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServiceServer).Login(ctx, req.(*LoginRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AuthService_Register_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegisterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServiceServer).Register(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/model.AuthService/Register",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServiceServer).Register(ctx, req.(*RegisterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AuthService_Validate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ValidateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServiceServer).Validate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/model.AuthService/Validate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServiceServer).Validate(ctx, req.(*ValidateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AuthService_InitiatePasswordReset_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmailRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServiceServer).InitiatePasswordReset(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/model.AuthService/InitiatePasswordReset",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServiceServer).InitiatePasswordReset(ctx, req.(*EmailRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AuthService_ResetPassword_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ResetPasswordRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServiceServer).ResetPassword(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/model.AuthService/ResetPassword",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServiceServer).ResetPassword(ctx, req.(*ResetPasswordRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _AuthService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "model.AuthService",
	HandlerType: (*AuthServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Login",
			Handler:    _AuthService_Login_Handler,
		},
		{
			MethodName: "Register",
			Handler:    _AuthService_Register_Handler,
		},
		{
			MethodName: "Validate",
			Handler:    _AuthService_Validate_Handler,
		},
		{
			MethodName: "InitiatePasswordReset",
			Handler:    _AuthService_InitiatePasswordReset_Handler,
		},
		{
			MethodName: "ResetPassword",
			Handler:    _AuthService_ResetPassword_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "auth.proto",
}

func init() { proto.RegisterFile("auth.proto", fileDescriptor_auth_72a5203105dc8aac) }

var fileDescriptor_auth_72a5203105dc8aac = []byte{
	// 428 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x53, 0x4d, 0x6f, 0xd3, 0x40,
	0x10, 0x95, 0xd3, 0xa6, 0x24, 0x03, 0x21, 0xd2, 0x12, 0x2a, 0xcb, 0xed, 0xa1, 0x8a, 0x90, 0xe8,
	0x69, 0x2b, 0x15, 0x90, 0x10, 0x37, 0x10, 0x3d, 0x20, 0x21, 0x54, 0x19, 0x09, 0xce, 0x5b, 0x7b,
	0xe2, 0x8c, 0x88, 0x77, 0xcd, 0xee, 0x18, 0xc4, 0x5f, 0xe0, 0x6f, 0x71, 0xe2, 0x5f, 0x55, 0xde,
	0xb5, 0x9d, 0x38, 0x55, 0xd5, 0xe3, 0xbc, 0xf9, 0xd8, 0x79, 0xf3, 0xde, 0x02, 0xa8, 0x9a, 0xd7,
	0xb2, 0xb2, 0x86, 0x8d, 0x18, 0x97, 0x26, 0xc7, 0x4d, 0x72, 0x52, 0x18, 0x53, 0x6c, 0xf0, 0xc2,
	0x83, 0x37, 0xf5, 0xea, 0x02, 0xcb, 0x8a, 0xff, 0x84, 0x9a, 0x64, 0x66, 0xf1, 0x67, 0x8d, 0x8e,
	0x43, 0xb8, 0x7c, 0x03, 0xb3, 0xcf, 0xa6, 0x20, 0x9d, 0xa2, 0xab, 0x8c, 0x76, 0x28, 0x9e, 0xc2,
	0x88, 0xf2, 0x38, 0x3a, 0x8b, 0xce, 0xa7, 0xe9, 0x88, 0x72, 0xb1, 0x80, 0x31, 0x9b, 0x1f, 0xa8,
	0xe3, 0x91, 0x87, 0x42, 0xb0, 0xfc, 0x1f, 0xc1, 0x3c, 0xc5, 0x82, 0x1c, 0xa3, 0x4d, 0xc3, 0x40,
	0x71, 0x0a, 0xd3, 0x15, 0x59, 0xc7, 0x5f, 0x54, 0x89, 0xed, 0x80, 0x2d, 0x20, 0x62, 0x78, 0xe4,
	0x6a, 0xab, 0x9b, 0x5c, 0x98, 0xd4, 0x85, 0xcd, 0x0b, 0x58, 0x2a, 0xda, 0xc4, 0x07, 0xe1, 0x05,
	0x1f, 0x88, 0x04, 0x26, 0x95, 0x72, 0xee, 0xb7, 0xb1, 0x79, 0x7c, 0xe8, 0x13, 0x7d, 0x2c, 0x96,
	0xf0, 0x24, 0x33, 0x7a, 0x45, 0xb6, 0x54, 0x4c, 0x46, 0xc7, 0x63, 0x9f, 0x1f, 0x60, 0xe2, 0x1c,
	0xe6, 0x95, 0xc5, 0x9c, 0x32, 0xc6, 0xfc, 0x3b, 0x69, 0x8d, 0x36, 0x3e, 0xf2, 0x65, 0xfb, 0xf0,
	0xf2, 0x25, 0xcc, 0xbf, 0xa9, 0x0d, 0xe5, 0x8a, 0xb1, 0xa3, 0xd2, 0x93, 0x8e, 0x76, 0x49, 0xff,
	0x8d, 0x60, 0x91, 0xa2, 0x43, 0xbe, 0x6e, 0x17, 0xd9, 0x29, 0x0f, 0x0c, 0xa2, 0x5d, 0x06, 0xa7,
	0x30, 0x75, 0x54, 0x68, 0xc5, 0xb5, 0xed, 0x38, 0x6f, 0x81, 0x01, 0xbf, 0x83, 0x07, 0xf8, 0x1d,
	0xde, 0xe5, 0x77, 0xf9, 0x6f, 0x04, 0x8f, 0xdf, 0xd7, 0xbc, 0xfe, 0x8a, 0xf6, 0x17, 0x65, 0x28,
	0x2e, 0x61, 0xec, 0x85, 0x14, 0xcf, 0xa4, 0x77, 0x81, 0x6c, 0x65, 0xf5, 0x1b, 0x26, 0x8b, 0x21,
	0xd8, 0x6a, 0xfd, 0x16, 0x26, 0x9d, 0x88, 0xe2, 0xb8, 0xad, 0xd8, 0x53, 0xf5, 0x9e, 0xce, 0x77,
	0x30, 0xe9, 0x6e, 0xd6, 0x77, 0xee, 0x1d, 0x31, 0x39, 0x96, 0xc1, 0x87, 0xb2, 0xf3, 0xa1, 0xbc,
	0x6a, 0x7c, 0x28, 0x3e, 0xc2, 0xf3, 0x4f, 0x9a, 0x98, 0x14, 0xe3, 0xf6, 0x90, 0x0e, 0xb9, 0xdf,
	0xfc, 0xaa, 0x39, 0xdf, 0xc3, 0x53, 0x66, 0x03, 0x2d, 0xc4, 0x49, 0x4f, 0xe0, 0xae, 0x42, 0xf7,
	0x4d, 0xf9, 0xf0, 0x02, 0xce, 0x32, 0x53, 0xca, 0xcc, 0xad, 0xb1, 0x7a, 0x2d, 0x2b, 0x8b, 0x25,
	0xa1, 0x6d, 0x0d, 0x62, 0xac, 0x6c, 0xfe, 0xd6, 0x75, 0x74, 0x73, 0xe4, 0xbb, 0x5e, 0xdd, 0x06,
	0x00, 0x00, 0xff, 0xff, 0x79, 0x8d, 0xab, 0xce, 0x6c, 0x03, 0x00, 0x00,
}

#apiVersion: extensions/v1beta1
#kind: Ingress
#metadata:
#  annotations:
#    kubernetes.io/ingress.class: "nginx"
#    nginx.ingress.kubernetes.io/ssl-passthrough: "true"
#    nginx.ingress.kubernetes.io/secure-backends: "true"
#    nginx.ingress.kubernetes.io/grpc-backend: "true"
#    nginx.ingress.kubernetes.io/backend-protocol: "GRPCS"
#  name: chat-ingress
#  namespace: default
#spec:
#  tls:
#    - secretName: pp-secret
#  rules:
#    - host: chat.premierpredictor.uk
#      http:
#        paths:
#          - backend:
#              serviceName: chatservice
#              servicePort: 3003
#---
#apiVersion: extensions/v1beta1
#kind: Ingress
#metadata:
#  annotations:
#    kubernetes.io/ingress.class: "nginx"
#    nginx.ingress.kubernetes.io/ssl-passthrough: "true"
#    nginx.ingress.kubernetes.io/secure-backends: "true"
#    nginx.ingress.kubernetes.io/grpc-backend: "true"
#    nginx.ingress.kubernetes.io/backend-protocol: "GRPCS"
#  name: notification-ingress
#  namespace: default
#spec:
#  tls:
#    - secretName: pp-secret
#  rules:
#    - host: notification.premierpredictor.uk
#      http:
#        paths:
#          - backend:
#              serviceName: notificationservice
#              servicePort: 3004
##---
##apiVersion: extensions/v1beta1
##kind: Ingress
##metadata:
##  annotations:
##    kubernetes.io/ingress.class: "nginx"
##    nginx.ingress.kubernetes.io/ssl-passthrough: "true"
##    nginx.ingress.kubernetes.io/secure-backends: "true"
##    nginx.ingress.kubernetes.io/grpc-backend: "true"
##    nginx.ingress.kubernetes.io/backend-protocol: "GRPCS"
##  name: livematch-ingress
##  namespace: default
##spec:
##  tls:
##    - secretName: pp-secret
##  rules:
##    - host: livematch.premierpredictor.uk
##      http:
##        paths:
##          - backend:
##              serviceName: livematchservice
##              servicePort: 3008

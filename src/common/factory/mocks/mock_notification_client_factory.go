// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/cshep4/premier-predictor-microservices/src/common/interfaces (interfaces: NotificationClientFactory)

// Package factorymocks is a generated GoMock package.
package factorymocks

import (
	gen "github.com/cshep4/premier-predictor-microservices/proto-gen/model/gen"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockNotificationClientFactory is a mock of NotificationClientFactory interface
type MockNotificationClientFactory struct {
	ctrl     *gomock.Controller
	recorder *MockNotificationClientFactoryMockRecorder
}

// MockNotificationClientFactoryMockRecorder is the mock recorder for MockNotificationClientFactory
type MockNotificationClientFactoryMockRecorder struct {
	mock *MockNotificationClientFactory
}

// NewMockNotificationClientFactory creates a new mock instance
func NewMockNotificationClientFactory(ctrl *gomock.Controller) *MockNotificationClientFactory {
	mock := &MockNotificationClientFactory{ctrl: ctrl}
	mock.recorder = &MockNotificationClientFactoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockNotificationClientFactory) EXPECT() *MockNotificationClientFactoryMockRecorder {
	return m.recorder
}

// CloseConnection mocks base method
func (m *MockNotificationClientFactory) CloseConnection() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CloseConnection")
	ret0, _ := ret[0].(error)
	return ret0
}

// CloseConnection indicates an expected call of CloseConnection
func (mr *MockNotificationClientFactoryMockRecorder) CloseConnection() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CloseConnection", reflect.TypeOf((*MockNotificationClientFactory)(nil).CloseConnection))
}

// NewNotificationClient mocks base method
func (m *MockNotificationClientFactory) NewNotificationClient() (gen.NotificationServiceClient, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "NewNotificationClient")
	ret0, _ := ret[0].(gen.NotificationServiceClient)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// NewNotificationClient indicates an expected call of NewNotificationClient
func (mr *MockNotificationClientFactoryMockRecorder) NewNotificationClient() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NewNotificationClient", reflect.TypeOf((*MockNotificationClientFactory)(nil).NewNotificationClient))
}

# This workflow will build a docker container, publish it to Google Container Registry, and deploy it to GKE when a release is created
#
# To configure this workflow:
#
# 1. Ensure that your repository contains the necessary configuration for your Google Kubernetes Engine cluster, including deployment.yml, kustomization.yml, service.yml, etc.
#
# 2. Set up secrets in your workspace: GKE_PROJECT with the name of the project and GKE_SA_KEY with the Base64 encoded JSON service account key (https://github.com/GoogleCloudPlatform/github-actions/tree/docs/service-account-key/setup-gcloud#inputs).
#
# 3. Change the values for the GKE_ZONE, GKE_CLUSTER, IMAGE, and DEPLOYMENT_NAME environment variables (below).
#
# For more support on how to run the workflow, please visit https://github.com/google-github-actions/setup-gcloud/tree/master/example-workflows/gke
#
# GKE_SA_KEY = cat <file>.json | base64

name: Deploy-GKE

on:
  push:
    paths:
      - 'kubernetes-manifests/**'
      - '.github/workflows/deploy-gke.yml'

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: prempred
  GKE_ZONE: europe-west2-a

jobs:
  deploy:
    name: Deploy to GKE
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - uses: google-github-actions/setup-gcloud@v0.2.0
        with:
          service_account_key: ${{ secrets.GKE_SA_KEY }}
          project_id: ${{ secrets.GKE_PROJECT }}

      - run: |-
          gcloud --quiet auth configure-docker

      - uses: google-github-actions/get-gke-credentials@v0.2.1
        with:
          cluster_name: ${{ env.GKE_CLUSTER }}
          location: ${{ env.GKE_ZONE }}
          credentials: ${{ secrets.GKE_SA_KEY }}

      - name: Set ImagePullSecret
        uses: azure/k8s-create-secret@v1
        with:
          namespace: 'default'
          container-registry-url: 'docker.pkg.github.com'
          container-registry-username: cshep4
          container-registry-password: ${{ secrets.DOCKER_PKG_TOKEN }}
          secret-name: 'github-packages-secret'
        id: create-secret

      - name: Create Secrets
        uses: azure/k8s-create-secret@v1
        with:
          namespace: 'default'
          secret-type: 'generic'
          arguments: --from-literal=jwtSecret=${{ secrets.JWT_SECRET }} --from-literal=dbScheme=${{ secrets.DB_SCHEME }} --from-literal=dbUser=${{ secrets.DB_USER }} --from-literal=dbPassword=${{ secrets.DB_PASSWORD }} --from-literal=dbHost=${{ secrets.DB_HOST }} --from-literal=emailUrl=${{ secrets.EMAIL_URL }}
          secret-name: pp-secrets

      - name: Deploy Services
        run: |-
          kubectl apply -f ./kubernetes-manifests/fixtureservice.yaml
          kubectl apply -f ./kubernetes-manifests/gatewayservice.yaml
          kubectl apply -f ./kubernetes-manifests/kauthservice.yaml
          kubectl apply -f ./kubernetes-manifests/leagueservice.yaml
          kubectl apply -f ./kubernetes-manifests/livematchservice.yaml
          kubectl apply -f ./kubernetes-manifests/predictionservice.yaml
          kubectl apply -f ./kubernetes-manifests/userservice.yaml
